buf0: ExternKernelSchedulerNode(ExternKernelOut)
buf0.writes = [StarDep(name='buf0')]
buf0.unmet_dependencies = []
buf0.met_dependencies = [StarDep(name='permute_1'), StarDep(name='tangents_160')]
buf0.node.kernel = extern_kernels.mm


buf1: ExternKernelSchedulerNode(ExternKernelOut)
buf1.writes = [StarDep(name='buf1')]
buf1.unmet_dependencies = []
buf1.met_dependencies = [StarDep(name='tangents_160'), StarDep(name='view')]
buf1.node.kernel = extern_kernels.mm


buf2: SchedulerNode(ComputedBuffer)
buf2.writes = 
    [   MemoryDep(name='buf2', index=c0, size=(1000, 64)),
        MemoryDep(name='buf2', index=c0, size=(1000,))]
buf2.unmet_dependencies = []
buf2.met_dependencies = [MemoryDep(name='tangents_160', index=c0 + 1000*c1, size=(1000, 64))]
buf2.group.device = cpu
buf2.group.iteration = ((1000,), (64,))
buf2.sizes = ([1000], [64])
class buf2_loop_body:
    var_ranges = {z0: 1000, z1: 64}
    index0 = z0 + 1000*z1
    index1 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('tangents_160', get_index)
        get_index_1 = self.get_index('index1')
        reduction = ops.reduction('buf2', torch.float32, torch.float32, 'sum', get_index_1, load)
        return reduction


buf3_buf4: FusedSchedulerNode(NoneType)
buf3_buf4.writes = 
    [   MemoryDep(name='buf3', index=c0, size=(2048, 64)),
        MemoryDep(name='buf3', index=c0, size=(2048,)),
        MemoryDep(name='buf4', index=c0, size=(2048, 64)),
        MemoryDep(name='buf4', index=c0, size=(2048,))]
buf3_buf4.unmet_dependencies = [MemoryDep(name='buf0', index=c0 + 2048*c1, size=(2048, 64))]
buf3_buf4.met_dependencies = 
    [   MemoryDep(name='convolution_52', index=c0 + 2048*c1, size=(2048, 64)),
        MemoryDep(name='le', index=c0 + 2048*c1, size=(2048, 64)),
        MemoryDep(name='unsqueeze_214', index=c0, size=(2048, 64))]
buf3_buf4.snodes = ['buf3', 'buf4']


buf5: SchedulerNode(ComputedBuffer)
buf5.writes = [MemoryDep(name='buf5', index=c0, size=(2048,))]
buf5.unmet_dependencies = [MemoryDep(name='buf4', index=c0, size=(2048,))]
buf5.met_dependencies = [MemoryDep(name='squeeze_157', index=c0, size=(2048,))]
buf5.group.device = cpu
buf5.group.iteration = ((2048,), ())
buf5.sizes = ([2048], [])
class buf5_loop_body:
    var_ranges = {z0: 2048}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf4', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_157', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf5', get_index_2, mul, None)
        return store


buf6: SchedulerNode(ComputedBuffer)
buf6.writes = [MemoryDep(name='buf6', index=c0, size=(131072,))]
buf6.unmet_dependencies = 
    [   MemoryDep(name='buf0', index=c0, size=(131072,)),
        MemoryDep(name='buf3', index=c1, size=(64, 2048)),
        MemoryDep(name='buf4', index=c1, size=(64, 2048))]
buf6.met_dependencies = 
    [   MemoryDep(name='convolution_52', index=c0, size=(131072,)),
        MemoryDep(name='le', index=c0, size=(131072,)),
        MemoryDep(name='primals_158', index=c1, size=(64, 2048)),
        MemoryDep(name='squeeze_157', index=c1, size=(64, 2048)),
        MemoryDep(name='unsqueeze_214', index=c1, size=(64, 2048))]
buf6.group.device = cpu
buf6.group.iteration = ((64, 2048), ())
buf6.sizes = ([64, 2048], [])
class buf6_loop_body:
    var_ranges = {z0: 64, z1: 2048}
    index0 = 2048*z0 + z1
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('le', get_index)
        constant = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf0', get_index_1)
        constant_1 = ops.constant(1, torch.float32)
        div = ops.div(load_1, constant_1)
        where = ops.where(load, constant, div)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_52', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_214', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf4', get_index_4)
        constant_2 = ops.constant(0.015625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_157', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_157', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf3', get_index_7)
        constant_3 = ops.constant(0.015625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_157', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_158', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf6', get_index_10, mul_6, None)
        return store


buf7: ExternKernelSchedulerNode(FallbackKernel)
buf7.writes = [StarDep(name='buf7')]
buf7.unmet_dependencies = [StarDep(name='buf6')]
buf7.met_dependencies = [StarDep(name='primals_157'), StarDep(name='relu_47')]
buf7.node.kernel = aten.convolution_backward


buf8: ExternKernelSchedulerNode(MultiOutput)
buf8.writes = [StarDep(name='buf8')]
buf8.unmet_dependencies = [StarDep(name='buf7')]
buf8.met_dependencies = []
buf8.node.kernel = None


buf9: ExternKernelSchedulerNode(MultiOutput)
buf9.writes = [StarDep(name='buf9')]
buf9.unmet_dependencies = [StarDep(name='buf7')]
buf9.met_dependencies = []
buf9.node.kernel = None


buf10_buf11: FusedSchedulerNode(NoneType)
buf10_buf11.writes = 
    [   MemoryDep(name='buf10', index=c0, size=(512, 64)),
        MemoryDep(name='buf10', index=c0, size=(512,)),
        MemoryDep(name='buf11', index=c0, size=(512, 64)),
        MemoryDep(name='buf11', index=c0, size=(512,))]
buf10_buf11.unmet_dependencies = [MemoryDep(name='buf8', index=c0 + 512*c1, size=(512, 64))]
buf10_buf11.met_dependencies = 
    [   MemoryDep(name='convolution_51', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='relu_47', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='unsqueeze_226', index=c0, size=(512, 64))]
buf10_buf11.snodes = ['buf10', 'buf11']


buf12: SchedulerNode(ComputedBuffer)
buf12.writes = [MemoryDep(name='buf12', index=c0, size=(512,))]
buf12.unmet_dependencies = [MemoryDep(name='buf11', index=c0, size=(512,))]
buf12.met_dependencies = [MemoryDep(name='squeeze_154', index=c0, size=(512,))]
buf12.group.device = cpu
buf12.group.iteration = ((512,), ())
buf12.sizes = ([512], [])
class buf12_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf11', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_154', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf12', get_index_2, mul, None)
        return store


buf13: SchedulerNode(ComputedBuffer)
buf13.writes = [MemoryDep(name='buf13', index=c0, size=(32768,))]
buf13.unmet_dependencies = 
    [   MemoryDep(name='buf10', index=c1, size=(64, 512)),
        MemoryDep(name='buf11', index=c1, size=(64, 512)),
        MemoryDep(name='buf8', index=c0, size=(32768,))]
buf13.met_dependencies = 
    [   MemoryDep(name='convolution_51', index=c0, size=(32768,)),
        MemoryDep(name='primals_155', index=c1, size=(64, 512)),
        MemoryDep(name='relu_47', index=c0, size=(32768,)),
        MemoryDep(name='squeeze_154', index=c1, size=(64, 512)),
        MemoryDep(name='unsqueeze_226', index=c1, size=(64, 512))]
buf13.group.device = cpu
buf13.group.iteration = ((64, 512), ())
buf13.sizes = ([64, 512], [])
class buf13_loop_body:
    var_ranges = {z0: 64, z1: 512}
    index0 = 512*z0 + z1
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_47', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf8', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_51', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_226', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf11', get_index_4)
        constant_2 = ops.constant(0.015625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_154', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_154', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf10', get_index_7)
        constant_3 = ops.constant(0.015625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_154', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_155', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf13', get_index_10, mul_6, None)
        return store


buf14: ExternKernelSchedulerNode(FallbackKernel)
buf14.writes = [StarDep(name='buf14')]
buf14.unmet_dependencies = [StarDep(name='buf13')]
buf14.met_dependencies = [StarDep(name='primals_154'), StarDep(name='relu_46')]
buf14.node.kernel = aten.convolution_backward


buf15: ExternKernelSchedulerNode(MultiOutput)
buf15.writes = [StarDep(name='buf15')]
buf15.unmet_dependencies = [StarDep(name='buf14')]
buf15.met_dependencies = []
buf15.node.kernel = None


buf16: ExternKernelSchedulerNode(MultiOutput)
buf16.writes = [StarDep(name='buf16')]
buf16.unmet_dependencies = [StarDep(name='buf14')]
buf16.met_dependencies = []
buf16.node.kernel = None


buf17_buf18: FusedSchedulerNode(NoneType)
buf17_buf18.writes = 
    [   MemoryDep(name='buf17', index=c0, size=(512, 64)),
        MemoryDep(name='buf17', index=c0, size=(512,)),
        MemoryDep(name='buf18', index=c0, size=(512, 64)),
        MemoryDep(name='buf18', index=c0, size=(512,))]
buf17_buf18.unmet_dependencies = [MemoryDep(name='buf15', index=c0 + 512*c1, size=(512, 64))]
buf17_buf18.met_dependencies = 
    [   MemoryDep(name='convolution_50', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='relu_46', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='unsqueeze_238', index=c0, size=(512, 64))]
buf17_buf18.snodes = ['buf17', 'buf18']


buf19: SchedulerNode(ComputedBuffer)
buf19.writes = [MemoryDep(name='buf19', index=c0, size=(512,))]
buf19.unmet_dependencies = [MemoryDep(name='buf18', index=c0, size=(512,))]
buf19.met_dependencies = [MemoryDep(name='squeeze_151', index=c0, size=(512,))]
buf19.group.device = cpu
buf19.group.iteration = ((512,), ())
buf19.sizes = ([512], [])
class buf19_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf18', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_151', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf19', get_index_2, mul, None)
        return store


buf20: SchedulerNode(ComputedBuffer)
buf20.writes = [MemoryDep(name='buf20', index=c0, size=(32768,))]
buf20.unmet_dependencies = 
    [   MemoryDep(name='buf15', index=c0, size=(32768,)),
        MemoryDep(name='buf17', index=c1, size=(64, 512)),
        MemoryDep(name='buf18', index=c1, size=(64, 512))]
buf20.met_dependencies = 
    [   MemoryDep(name='convolution_50', index=c0, size=(32768,)),
        MemoryDep(name='primals_152', index=c1, size=(64, 512)),
        MemoryDep(name='relu_46', index=c0, size=(32768,)),
        MemoryDep(name='squeeze_151', index=c1, size=(64, 512)),
        MemoryDep(name='unsqueeze_238', index=c1, size=(64, 512))]
buf20.group.device = cpu
buf20.group.iteration = ((64, 512), ())
buf20.sizes = ([64, 512], [])
class buf20_loop_body:
    var_ranges = {z0: 64, z1: 512}
    index0 = 512*z0 + z1
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_46', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf15', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_50', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_238', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf18', get_index_4)
        constant_2 = ops.constant(0.015625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_151', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_151', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf17', get_index_7)
        constant_3 = ops.constant(0.015625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_151', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_152', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf20', get_index_10, mul_6, None)
        return store


buf21: ExternKernelSchedulerNode(FallbackKernel)
buf21.writes = [StarDep(name='buf21')]
buf21.unmet_dependencies = [StarDep(name='buf20')]
buf21.met_dependencies = [StarDep(name='primals_151'), StarDep(name='relu_45')]
buf21.node.kernel = aten.convolution_backward


buf22: ExternKernelSchedulerNode(MultiOutput)
buf22.writes = [StarDep(name='buf22')]
buf22.unmet_dependencies = [StarDep(name='buf21')]
buf22.met_dependencies = []
buf22.node.kernel = None


buf23: ExternKernelSchedulerNode(MultiOutput)
buf23.writes = [StarDep(name='buf23')]
buf23.unmet_dependencies = [StarDep(name='buf21')]
buf23.met_dependencies = []
buf23.node.kernel = None


buf24_buf25: FusedSchedulerNode(NoneType)
buf24_buf25.writes = 
    [   MemoryDep(name='buf24', index=c0, size=(2048, 64)),
        MemoryDep(name='buf24', index=c0, size=(2048,)),
        MemoryDep(name='buf25', index=c0, size=(2048, 64)),
        MemoryDep(name='buf25', index=c0, size=(2048,))]
buf24_buf25.unmet_dependencies = 
    [   MemoryDep(name='buf0', index=c0 + 2048*c1, size=(2048, 64)),
        MemoryDep(name='buf22', index=c0 + 2048*c1, size=(2048, 64))]
buf24_buf25.met_dependencies = 
    [   MemoryDep(name='convolution_49', index=c0 + 2048*c1, size=(2048, 64)),
        MemoryDep(name='le', index=c0 + 2048*c1, size=(2048, 64)),
        MemoryDep(name='relu_45', index=c0 + 2048*c1, size=(2048, 64)),
        MemoryDep(name='unsqueeze_250', index=c0, size=(2048, 64))]
buf24_buf25.snodes = ['buf24', 'buf25']


buf26_buf28: FusedSchedulerNode(NoneType)
buf26_buf28.writes = 
    [   MemoryDep(name='buf26', index=c0, size=(131072,)),
        MemoryDep(name='buf28', index=c0, size=(131072,))]
buf26_buf28.unmet_dependencies = 
    [   MemoryDep(name='buf0', index=c0, size=(131072,)),
        MemoryDep(name='buf22', index=c0, size=(131072,)),
        MemoryDep(name='buf24', index=c1, size=(64, 2048)),
        MemoryDep(name='buf25', index=c1, size=(64, 2048))]
buf26_buf28.met_dependencies = 
    [   MemoryDep(name='convolution_49', index=c0, size=(131072,)),
        MemoryDep(name='le', index=c0, size=(131072,)),
        MemoryDep(name='primals_149', index=c1, size=(64, 2048)),
        MemoryDep(name='relu_45', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_148', index=c1, size=(64, 2048)),
        MemoryDep(name='unsqueeze_250', index=c1, size=(64, 2048))]
buf26_buf28.snodes = ['buf26', 'buf28']


buf27: SchedulerNode(ComputedBuffer)
buf27.writes = [MemoryDep(name='buf27', index=c0, size=(2048,))]
buf27.unmet_dependencies = [MemoryDep(name='buf25', index=c0, size=(2048,))]
buf27.met_dependencies = [MemoryDep(name='squeeze_148', index=c0, size=(2048,))]
buf27.group.device = cpu
buf27.group.iteration = ((2048,), ())
buf27.sizes = ([2048], [])
class buf27_loop_body:
    var_ranges = {z0: 2048}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf25', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_148', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf27', get_index_2, mul, None)
        return store


buf29: ExternKernelSchedulerNode(FallbackKernel)
buf29.writes = [StarDep(name='buf29')]
buf29.unmet_dependencies = [StarDep(name='buf28')]
buf29.met_dependencies = [StarDep(name='primals_148'), StarDep(name='relu_44')]
buf29.node.kernel = aten.convolution_backward


buf30: ExternKernelSchedulerNode(MultiOutput)
buf30.writes = [StarDep(name='buf30')]
buf30.unmet_dependencies = [StarDep(name='buf29')]
buf30.met_dependencies = []
buf30.node.kernel = None


buf31: ExternKernelSchedulerNode(MultiOutput)
buf31.writes = [StarDep(name='buf31')]
buf31.unmet_dependencies = [StarDep(name='buf29')]
buf31.met_dependencies = []
buf31.node.kernel = None


buf32_buf33: FusedSchedulerNode(NoneType)
buf32_buf33.writes = 
    [   MemoryDep(name='buf32', index=c0, size=(512, 64)),
        MemoryDep(name='buf32', index=c0, size=(512,)),
        MemoryDep(name='buf33', index=c0, size=(512, 64)),
        MemoryDep(name='buf33', index=c0, size=(512,))]
buf32_buf33.unmet_dependencies = [MemoryDep(name='buf30', index=c0 + 512*c1, size=(512, 64))]
buf32_buf33.met_dependencies = 
    [   MemoryDep(name='convolution_48', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='relu_44', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='unsqueeze_262', index=c0, size=(512, 64))]
buf32_buf33.snodes = ['buf32', 'buf33']


buf34: SchedulerNode(ComputedBuffer)
buf34.writes = [MemoryDep(name='buf34', index=c0, size=(512,))]
buf34.unmet_dependencies = [MemoryDep(name='buf33', index=c0, size=(512,))]
buf34.met_dependencies = [MemoryDep(name='squeeze_145', index=c0, size=(512,))]
buf34.group.device = cpu
buf34.group.iteration = ((512,), ())
buf34.sizes = ([512], [])
class buf34_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf33', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_145', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf34', get_index_2, mul, None)
        return store


buf35: SchedulerNode(ComputedBuffer)
buf35.writes = [MemoryDep(name='buf35', index=c0, size=(32768,))]
buf35.unmet_dependencies = 
    [   MemoryDep(name='buf30', index=c0, size=(32768,)),
        MemoryDep(name='buf32', index=c1, size=(64, 512)),
        MemoryDep(name='buf33', index=c1, size=(64, 512))]
buf35.met_dependencies = 
    [   MemoryDep(name='convolution_48', index=c0, size=(32768,)),
        MemoryDep(name='primals_146', index=c1, size=(64, 512)),
        MemoryDep(name='relu_44', index=c0, size=(32768,)),
        MemoryDep(name='squeeze_145', index=c1, size=(64, 512)),
        MemoryDep(name='unsqueeze_262', index=c1, size=(64, 512))]
buf35.group.device = cpu
buf35.group.iteration = ((64, 512), ())
buf35.sizes = ([64, 512], [])
class buf35_loop_body:
    var_ranges = {z0: 64, z1: 512}
    index0 = 512*z0 + z1
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_44', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf30', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_48', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_262', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf33', get_index_4)
        constant_2 = ops.constant(0.015625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_145', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_145', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf32', get_index_7)
        constant_3 = ops.constant(0.015625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_145', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_146', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf35', get_index_10, mul_6, None)
        return store


buf36: ExternKernelSchedulerNode(FallbackKernel)
buf36.writes = [StarDep(name='buf36')]
buf36.unmet_dependencies = [StarDep(name='buf35')]
buf36.met_dependencies = [StarDep(name='primals_145'), StarDep(name='relu_43')]
buf36.node.kernel = aten.convolution_backward


buf37: ExternKernelSchedulerNode(MultiOutput)
buf37.writes = [StarDep(name='buf37')]
buf37.unmet_dependencies = [StarDep(name='buf36')]
buf37.met_dependencies = []
buf37.node.kernel = None


buf38: ExternKernelSchedulerNode(MultiOutput)
buf38.writes = [StarDep(name='buf38')]
buf38.unmet_dependencies = [StarDep(name='buf36')]
buf38.met_dependencies = []
buf38.node.kernel = None


buf39_buf40: FusedSchedulerNode(NoneType)
buf39_buf40.writes = 
    [   MemoryDep(name='buf39', index=c0, size=(512, 64)),
        MemoryDep(name='buf39', index=c0, size=(512,)),
        MemoryDep(name='buf40', index=c0, size=(512, 64)),
        MemoryDep(name='buf40', index=c0, size=(512,))]
buf39_buf40.unmet_dependencies = [MemoryDep(name='buf37', index=c0 + 512*c1, size=(512, 64))]
buf39_buf40.met_dependencies = 
    [   MemoryDep(name='convolution_47', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='relu_43', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='unsqueeze_274', index=c0, size=(512, 64))]
buf39_buf40.snodes = ['buf39', 'buf40']


buf41: SchedulerNode(ComputedBuffer)
buf41.writes = [MemoryDep(name='buf41', index=c0, size=(512,))]
buf41.unmet_dependencies = [MemoryDep(name='buf40', index=c0, size=(512,))]
buf41.met_dependencies = [MemoryDep(name='squeeze_142', index=c0, size=(512,))]
buf41.group.device = cpu
buf41.group.iteration = ((512,), ())
buf41.sizes = ([512], [])
class buf41_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf40', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_142', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf41', get_index_2, mul, None)
        return store


buf42: SchedulerNode(ComputedBuffer)
buf42.writes = [MemoryDep(name='buf42', index=c0, size=(32768,))]
buf42.unmet_dependencies = 
    [   MemoryDep(name='buf37', index=c0, size=(32768,)),
        MemoryDep(name='buf39', index=c1, size=(64, 512)),
        MemoryDep(name='buf40', index=c1, size=(64, 512))]
buf42.met_dependencies = 
    [   MemoryDep(name='convolution_47', index=c0, size=(32768,)),
        MemoryDep(name='primals_143', index=c1, size=(64, 512)),
        MemoryDep(name='relu_43', index=c0, size=(32768,)),
        MemoryDep(name='squeeze_142', index=c1, size=(64, 512)),
        MemoryDep(name='unsqueeze_274', index=c1, size=(64, 512))]
buf42.group.device = cpu
buf42.group.iteration = ((64, 512), ())
buf42.sizes = ([64, 512], [])
class buf42_loop_body:
    var_ranges = {z0: 64, z1: 512}
    index0 = 512*z0 + z1
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_43', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf37', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_47', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_274', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf40', get_index_4)
        constant_2 = ops.constant(0.015625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_142', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_142', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf39', get_index_7)
        constant_3 = ops.constant(0.015625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_142', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_143', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf42', get_index_10, mul_6, None)
        return store


buf43: ExternKernelSchedulerNode(FallbackKernel)
buf43.writes = [StarDep(name='buf43')]
buf43.unmet_dependencies = [StarDep(name='buf42')]
buf43.met_dependencies = [StarDep(name='primals_142'), StarDep(name='relu_42')]
buf43.node.kernel = aten.convolution_backward


buf44: ExternKernelSchedulerNode(MultiOutput)
buf44.writes = [StarDep(name='buf44')]
buf44.unmet_dependencies = [StarDep(name='buf43')]
buf44.met_dependencies = []
buf44.node.kernel = None


buf45: ExternKernelSchedulerNode(MultiOutput)
buf45.writes = [StarDep(name='buf45')]
buf45.unmet_dependencies = [StarDep(name='buf43')]
buf45.met_dependencies = []
buf45.node.kernel = None


buf46: SchedulerNode(ComputedBuffer)
buf46.writes = [MemoryDep(name='buf46', index=c0, size=(131072,))]
buf46.unmet_dependencies = 
    [   MemoryDep(name='buf0', index=c0, size=(131072,)),
        MemoryDep(name='buf22', index=c0, size=(131072,)),
        MemoryDep(name='buf44', index=c0, size=(131072,))]
buf46.met_dependencies = 
    [   MemoryDep(name='le', index=c0, size=(131072,)),
        MemoryDep(name='relu_42', index=c0, size=(131072,)),
        MemoryDep(name='relu_45', index=c0, size=(131072,))]
buf46.group.device = cpu
buf46.group.iteration = ((131072,), ())
buf46.sizes = ([131072], [])
class buf46_loop_body:
    var_ranges = {z0: 131072}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_42', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('relu_45', get_index_1)
        constant_2 = ops.constant(0, torch.float32)
        le_1 = ops.le(load_1, constant_2)
        constant_3 = ops.constant(0.0, torch.float32)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('le', get_index_2)
        constant_4 = ops.constant(0.0, torch.float32)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('buf0', get_index_3)
        constant_5 = ops.constant(1, torch.float32)
        div = ops.div(load_3, constant_5)
        where = ops.where(load_2, constant_4, div)
        get_index_4 = self.get_index('index0')
        load_4 = ops.load('buf22', get_index_4)
        add = ops.add(where, load_4)
        where_1 = ops.where(le_1, constant_3, add)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf44', get_index_5)
        add_1 = ops.add(where_1, load_5)
        where_2 = ops.where(le, constant_1, add_1)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf46', get_index_6, where_2, None)
        return store


buf47_buf48_buf54: FusedSchedulerNode(NoneType)
buf47_buf48_buf54.writes = 
    [   MemoryDep(name='buf47', index=c0, size=(2048, 64)),
        MemoryDep(name='buf47', index=c0, size=(2048,)),
        MemoryDep(name='buf48', index=c0, size=(2048, 64)),
        MemoryDep(name='buf48', index=c0, size=(2048,)),
        MemoryDep(name='buf54', index=c0, size=(2048, 64)),
        MemoryDep(name='buf54', index=c0, size=(2048,))]
buf47_buf48_buf54.unmet_dependencies = [MemoryDep(name='buf46', index=c0 + 2048*c1, size=(2048, 64))]
buf47_buf48_buf54.met_dependencies = 
    [   MemoryDep(name='convolution_45', index=c0 + 2048*c1, size=(2048, 64)),
        MemoryDep(name='convolution_46', index=c0 + 2048*c1, size=(2048, 64)),
        MemoryDep(name='unsqueeze_286', index=c0, size=(2048, 64)),
        MemoryDep(name='unsqueeze_298', index=c0, size=(2048, 64))]
buf47_buf48_buf54.snodes = ['buf47', 'buf48', 'buf54']


buf49: SchedulerNode(ComputedBuffer)
buf49.writes = [MemoryDep(name='buf49', index=c0, size=(2048,))]
buf49.unmet_dependencies = [MemoryDep(name='buf48', index=c0, size=(2048,))]
buf49.met_dependencies = [MemoryDep(name='squeeze_139', index=c0, size=(2048,))]
buf49.group.device = cpu
buf49.group.iteration = ((2048,), ())
buf49.sizes = ([2048], [])
class buf49_loop_body:
    var_ranges = {z0: 2048}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf48', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_139', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf49', get_index_2, mul, None)
        return store


buf50_buf56: FusedSchedulerNode(NoneType)
buf50_buf56.writes = 
    [   MemoryDep(name='buf50', index=c0, size=(131072,)),
        MemoryDep(name='buf56', index=c0, size=(131072,))]
buf50_buf56.unmet_dependencies = 
    [   MemoryDep(name='buf46', index=c0, size=(131072,)),
        MemoryDep(name='buf47', index=c1, size=(64, 2048)),
        MemoryDep(name='buf48', index=c1, size=(64, 2048)),
        MemoryDep(name='buf54', index=c1, size=(64, 2048))]
buf50_buf56.met_dependencies = 
    [   MemoryDep(name='convolution_45', index=c0, size=(131072,)),
        MemoryDep(name='convolution_46', index=c0, size=(131072,)),
        MemoryDep(name='primals_137', index=c1, size=(64, 2048)),
        MemoryDep(name='primals_140', index=c1, size=(64, 2048)),
        MemoryDep(name='squeeze_136', index=c1, size=(64, 2048)),
        MemoryDep(name='squeeze_139', index=c1, size=(64, 2048)),
        MemoryDep(name='unsqueeze_286', index=c1, size=(64, 2048)),
        MemoryDep(name='unsqueeze_298', index=c1, size=(64, 2048))]
buf50_buf56.snodes = ['buf50', 'buf56']


buf51: ExternKernelSchedulerNode(FallbackKernel)
buf51.writes = [StarDep(name='buf51')]
buf51.unmet_dependencies = [StarDep(name='buf50')]
buf51.met_dependencies = [StarDep(name='primals_139'), StarDep(name='relu_39')]
buf51.node.kernel = aten.convolution_backward


buf52: ExternKernelSchedulerNode(MultiOutput)
buf52.writes = [StarDep(name='buf52')]
buf52.unmet_dependencies = [StarDep(name='buf51')]
buf52.met_dependencies = []
buf52.node.kernel = None


buf53: ExternKernelSchedulerNode(MultiOutput)
buf53.writes = [StarDep(name='buf53')]
buf53.unmet_dependencies = [StarDep(name='buf51')]
buf53.met_dependencies = []
buf53.node.kernel = None


buf55: SchedulerNode(ComputedBuffer)
buf55.writes = [MemoryDep(name='buf55', index=c0, size=(2048,))]
buf55.unmet_dependencies = [MemoryDep(name='buf54', index=c0, size=(2048,))]
buf55.met_dependencies = [MemoryDep(name='squeeze_136', index=c0, size=(2048,))]
buf55.group.device = cpu
buf55.group.iteration = ((2048,), ())
buf55.sizes = ([2048], [])
class buf55_loop_body:
    var_ranges = {z0: 2048}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf54', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_136', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf55', get_index_2, mul, None)
        return store


buf57: ExternKernelSchedulerNode(FallbackKernel)
buf57.writes = [StarDep(name='buf57')]
buf57.unmet_dependencies = [StarDep(name='buf56')]
buf57.met_dependencies = [StarDep(name='primals_136'), StarDep(name='relu_41')]
buf57.node.kernel = aten.convolution_backward


buf58: ExternKernelSchedulerNode(MultiOutput)
buf58.writes = [StarDep(name='buf58')]
buf58.unmet_dependencies = [StarDep(name='buf57')]
buf58.met_dependencies = []
buf58.node.kernel = None


buf59: ExternKernelSchedulerNode(MultiOutput)
buf59.writes = [StarDep(name='buf59')]
buf59.unmet_dependencies = [StarDep(name='buf57')]
buf59.met_dependencies = []
buf59.node.kernel = None


buf60_buf61: FusedSchedulerNode(NoneType)
buf60_buf61.writes = 
    [   MemoryDep(name='buf60', index=c0, size=(512, 64)),
        MemoryDep(name='buf60', index=c0, size=(512,)),
        MemoryDep(name='buf61', index=c0, size=(512, 64)),
        MemoryDep(name='buf61', index=c0, size=(512,))]
buf60_buf61.unmet_dependencies = [MemoryDep(name='buf58', index=c0 + 512*c1, size=(512, 64))]
buf60_buf61.met_dependencies = 
    [   MemoryDep(name='convolution_44', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='relu_41', index=c0 + 512*c1, size=(512, 64)),
        MemoryDep(name='unsqueeze_310', index=c0, size=(512, 64))]
buf60_buf61.snodes = ['buf60', 'buf61']


buf62: SchedulerNode(ComputedBuffer)
buf62.writes = [MemoryDep(name='buf62', index=c0, size=(512,))]
buf62.unmet_dependencies = [MemoryDep(name='buf61', index=c0, size=(512,))]
buf62.met_dependencies = [MemoryDep(name='squeeze_133', index=c0, size=(512,))]
buf62.group.device = cpu
buf62.group.iteration = ((512,), ())
buf62.sizes = ([512], [])
class buf62_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf61', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_133', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf62', get_index_2, mul, None)
        return store


buf63: SchedulerNode(ComputedBuffer)
buf63.writes = [MemoryDep(name='buf63', index=c0, size=(32768,))]
buf63.unmet_dependencies = 
    [   MemoryDep(name='buf58', index=c0, size=(32768,)),
        MemoryDep(name='buf60', index=c1, size=(64, 512)),
        MemoryDep(name='buf61', index=c1, size=(64, 512))]
buf63.met_dependencies = 
    [   MemoryDep(name='convolution_44', index=c0, size=(32768,)),
        MemoryDep(name='primals_134', index=c1, size=(64, 512)),
        MemoryDep(name='relu_41', index=c0, size=(32768,)),
        MemoryDep(name='squeeze_133', index=c1, size=(64, 512)),
        MemoryDep(name='unsqueeze_310', index=c1, size=(64, 512))]
buf63.group.device = cpu
buf63.group.iteration = ((64, 512), ())
buf63.sizes = ([64, 512], [])
class buf63_loop_body:
    var_ranges = {z0: 64, z1: 512}
    index0 = 512*z0 + z1
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_41', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf58', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_44', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_310', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf61', get_index_4)
        constant_2 = ops.constant(0.015625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_133', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_133', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf60', get_index_7)
        constant_3 = ops.constant(0.015625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_133', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_134', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf63', get_index_10, mul_6, None)
        return store


buf64: ExternKernelSchedulerNode(FallbackKernel)
buf64.writes = [StarDep(name='buf64')]
buf64.unmet_dependencies = [StarDep(name='buf63')]
buf64.met_dependencies = [StarDep(name='primals_133'), StarDep(name='relu_40')]
buf64.node.kernel = aten.convolution_backward


buf65: ExternKernelSchedulerNode(MultiOutput)
buf65.writes = [StarDep(name='buf65')]
buf65.unmet_dependencies = [StarDep(name='buf64')]
buf65.met_dependencies = []
buf65.node.kernel = None


buf66: ExternKernelSchedulerNode(MultiOutput)
buf66.writes = [StarDep(name='buf66')]
buf66.unmet_dependencies = [StarDep(name='buf64')]
buf66.met_dependencies = []
buf66.node.kernel = None


buf67_buf68: FusedSchedulerNode(NoneType)
buf67_buf68.writes = 
    [   MemoryDep(name='buf67', index=c0, size=(512, 256)),
        MemoryDep(name='buf67', index=c0, size=(512,)),
        MemoryDep(name='buf68', index=c0, size=(512, 256)),
        MemoryDep(name='buf68', index=c0, size=(512,))]
buf67_buf68.unmet_dependencies = [MemoryDep(name='buf65', index=4*c0 + 2048*c1 + c2, size=(512, 64, 4))]
buf67_buf68.met_dependencies = 
    [   MemoryDep(name='convolution_43', index=4*c0 + 2048*c1 + c2, size=(512, 64, 4)),
        MemoryDep(name='relu_40', index=4*c0 + 2048*c1 + c2, size=(512, 64, 4)),
        MemoryDep(name='unsqueeze_322', index=c0, size=(512, 256))]
buf67_buf68.snodes = ['buf67', 'buf68']


buf69: SchedulerNode(ComputedBuffer)
buf69.writes = [MemoryDep(name='buf69', index=c0, size=(512,))]
buf69.unmet_dependencies = [MemoryDep(name='buf68', index=c0, size=(512,))]
buf69.met_dependencies = [MemoryDep(name='squeeze_130', index=c0, size=(512,))]
buf69.group.device = cpu
buf69.group.iteration = ((512,), ())
buf69.sizes = ([512], [])
class buf69_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf68', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_130', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf69', get_index_2, mul, None)
        return store


buf70: SchedulerNode(ComputedBuffer)
buf70.writes = [MemoryDep(name='buf70', index=c0, size=(131072,))]
buf70.unmet_dependencies = 
    [   MemoryDep(name='buf65', index=c0, size=(131072,)),
        MemoryDep(name='buf67', index=c1, size=(64, 512, 4)),
        MemoryDep(name='buf68', index=c1, size=(64, 512, 4))]
buf70.met_dependencies = 
    [   MemoryDep(name='convolution_43', index=c0, size=(131072,)),
        MemoryDep(name='primals_131', index=c1, size=(64, 512, 4)),
        MemoryDep(name='relu_40', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_130', index=c1, size=(64, 512, 4)),
        MemoryDep(name='unsqueeze_322', index=c1, size=(64, 512, 4))]
buf70.group.device = cpu
buf70.group.iteration = ((64, 512, 4), ())
buf70.sizes = ([64, 512, 4], [])
class buf70_loop_body:
    var_ranges = {z0: 64, z1: 512, z2: 4}
    index0 = 2048*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_40', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf65', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_43', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_322', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf68', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_130', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_130', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf67', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_130', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_131', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf70', get_index_10, mul_6, None)
        return store


buf71: ExternKernelSchedulerNode(FallbackKernel)
buf71.writes = [StarDep(name='buf71')]
buf71.unmet_dependencies = [StarDep(name='buf70')]
buf71.met_dependencies = [StarDep(name='primals_130'), StarDep(name='relu_39')]
buf71.node.kernel = aten.convolution_backward


buf72: ExternKernelSchedulerNode(MultiOutput)
buf72.writes = [StarDep(name='buf72')]
buf72.unmet_dependencies = [StarDep(name='buf71')]
buf72.met_dependencies = []
buf72.node.kernel = None


buf73: ExternKernelSchedulerNode(MultiOutput)
buf73.writes = [StarDep(name='buf73')]
buf73.unmet_dependencies = [StarDep(name='buf71')]
buf73.met_dependencies = []
buf73.node.kernel = None


buf74_buf75: FusedSchedulerNode(NoneType)
buf74_buf75.writes = 
    [   MemoryDep(name='buf74', index=c0, size=(1024, 256)),
        MemoryDep(name='buf74', index=c0, size=(1024,)),
        MemoryDep(name='buf75', index=c0, size=(1024, 256)),
        MemoryDep(name='buf75', index=c0, size=(1024,))]
buf74_buf75.unmet_dependencies = 
    [   MemoryDep(name='buf52', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='buf72', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4))]
buf74_buf75.met_dependencies = 
    [   MemoryDep(name='convolution_42', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='relu_39', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='unsqueeze_334', index=c0, size=(1024, 256))]
buf74_buf75.snodes = ['buf74', 'buf75']


buf76: SchedulerNode(ComputedBuffer)
buf76.writes = [MemoryDep(name='buf76', index=c0, size=(262144,))]
buf76.unmet_dependencies = 
    [   MemoryDep(name='buf52', index=c0, size=(262144,)),
        MemoryDep(name='buf72', index=c0, size=(262144,)),
        MemoryDep(name='buf74', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='buf75', index=c1, size=(64, 1024, 4))]
buf76.met_dependencies = 
    [   MemoryDep(name='convolution_42', index=c0, size=(262144,)),
        MemoryDep(name='primals_128', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='relu_39', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_127', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='unsqueeze_334', index=c1, size=(64, 1024, 4))]
buf76.group.device = cpu
buf76.group.iteration = ((64, 1024, 4), ())
buf76.sizes = ([64, 1024, 4], [])
class buf76_loop_body:
    var_ranges = {z0: 64, z1: 1024, z2: 4}
    index0 = 4096*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_39', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf52', get_index_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf72', get_index_2)
        add = ops.add(load_1, load_2)
        where = ops.where(le, constant_1, add)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('convolution_42', get_index_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('unsqueeze_334', get_index_4)
        sub = ops.sub(load_3, load_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('buf75', get_index_5)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_5, constant_2)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_127', get_index_6)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_127', get_index_7)
        mul_1 = ops.mul(load_6, load_7)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('buf74', get_index_8)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_8, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('squeeze_127', get_index_9)
        get_index_10 = self.get_index('index1')
        load_10 = ops.load('primals_128', get_index_10)
        mul_5 = ops.mul(load_9, load_10)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_11 = self.get_index('index0')
        store = ops.store('buf76', get_index_11, mul_6, None)
        return store


buf77: SchedulerNode(ComputedBuffer)
buf77.writes = [MemoryDep(name='buf77', index=c0, size=(1024,))]
buf77.unmet_dependencies = [MemoryDep(name='buf75', index=c0, size=(1024,))]
buf77.met_dependencies = [MemoryDep(name='squeeze_127', index=c0, size=(1024,))]
buf77.group.device = cpu
buf77.group.iteration = ((1024,), ())
buf77.sizes = ([1024], [])
class buf77_loop_body:
    var_ranges = {z0: 1024}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf75', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_127', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf77', get_index_2, mul, None)
        return store


buf78: ExternKernelSchedulerNode(FallbackKernel)
buf78.writes = [StarDep(name='buf78')]
buf78.unmet_dependencies = [StarDep(name='buf76')]
buf78.met_dependencies = [StarDep(name='primals_127'), StarDep(name='relu_38')]
buf78.node.kernel = aten.convolution_backward


buf79: ExternKernelSchedulerNode(MultiOutput)
buf79.writes = [StarDep(name='buf79')]
buf79.unmet_dependencies = [StarDep(name='buf78')]
buf79.met_dependencies = []
buf79.node.kernel = None


buf80: ExternKernelSchedulerNode(MultiOutput)
buf80.writes = [StarDep(name='buf80')]
buf80.unmet_dependencies = [StarDep(name='buf78')]
buf80.met_dependencies = []
buf80.node.kernel = None


buf81_buf82: FusedSchedulerNode(NoneType)
buf81_buf82.writes = 
    [   MemoryDep(name='buf81', index=c0, size=(256, 256)),
        MemoryDep(name='buf81', index=c0, size=(256,)),
        MemoryDep(name='buf82', index=c0, size=(256, 256)),
        MemoryDep(name='buf82', index=c0, size=(256,))]
buf81_buf82.unmet_dependencies = [MemoryDep(name='buf79', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf81_buf82.met_dependencies = 
    [   MemoryDep(name='convolution_41', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_38', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_346', index=c0, size=(256, 256))]
buf81_buf82.snodes = ['buf81', 'buf82']


buf83: SchedulerNode(ComputedBuffer)
buf83.writes = [MemoryDep(name='buf83', index=c0, size=(256,))]
buf83.unmet_dependencies = [MemoryDep(name='buf82', index=c0, size=(256,))]
buf83.met_dependencies = [MemoryDep(name='squeeze_124', index=c0, size=(256,))]
buf83.group.device = cpu
buf83.group.iteration = ((256,), ())
buf83.sizes = ([256], [])
class buf83_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf82', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_124', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf83', get_index_2, mul, None)
        return store


buf84: SchedulerNode(ComputedBuffer)
buf84.writes = [MemoryDep(name='buf84', index=c0, size=(65536,))]
buf84.unmet_dependencies = 
    [   MemoryDep(name='buf79', index=c0, size=(65536,)),
        MemoryDep(name='buf81', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf82', index=c1, size=(64, 256, 4))]
buf84.met_dependencies = 
    [   MemoryDep(name='convolution_41', index=c0, size=(65536,)),
        MemoryDep(name='primals_125', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_38', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_124', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_346', index=c1, size=(64, 256, 4))]
buf84.group.device = cpu
buf84.group.iteration = ((64, 256, 4), ())
buf84.sizes = ([64, 256, 4], [])
class buf84_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_38', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf79', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_41', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_346', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf82', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_124', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_124', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf81', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_124', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_125', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf84', get_index_10, mul_6, None)
        return store


buf85: ExternKernelSchedulerNode(FallbackKernel)
buf85.writes = [StarDep(name='buf85')]
buf85.unmet_dependencies = [StarDep(name='buf84')]
buf85.met_dependencies = [StarDep(name='primals_124'), StarDep(name='relu_37')]
buf85.node.kernel = aten.convolution_backward


buf86: ExternKernelSchedulerNode(MultiOutput)
buf86.writes = [StarDep(name='buf86')]
buf86.unmet_dependencies = [StarDep(name='buf85')]
buf86.met_dependencies = []
buf86.node.kernel = None


buf87: ExternKernelSchedulerNode(MultiOutput)
buf87.writes = [StarDep(name='buf87')]
buf87.unmet_dependencies = [StarDep(name='buf85')]
buf87.met_dependencies = []
buf87.node.kernel = None


buf88_buf89: FusedSchedulerNode(NoneType)
buf88_buf89.writes = 
    [   MemoryDep(name='buf88', index=c0, size=(256, 256)),
        MemoryDep(name='buf88', index=c0, size=(256,)),
        MemoryDep(name='buf89', index=c0, size=(256, 256)),
        MemoryDep(name='buf89', index=c0, size=(256,))]
buf88_buf89.unmet_dependencies = [MemoryDep(name='buf86', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf88_buf89.met_dependencies = 
    [   MemoryDep(name='convolution_40', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_37', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_358', index=c0, size=(256, 256))]
buf88_buf89.snodes = ['buf88', 'buf89']


buf90: SchedulerNode(ComputedBuffer)
buf90.writes = [MemoryDep(name='buf90', index=c0, size=(256,))]
buf90.unmet_dependencies = [MemoryDep(name='buf89', index=c0, size=(256,))]
buf90.met_dependencies = [MemoryDep(name='squeeze_121', index=c0, size=(256,))]
buf90.group.device = cpu
buf90.group.iteration = ((256,), ())
buf90.sizes = ([256], [])
class buf90_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf89', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_121', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf90', get_index_2, mul, None)
        return store


buf91: SchedulerNode(ComputedBuffer)
buf91.writes = [MemoryDep(name='buf91', index=c0, size=(65536,))]
buf91.unmet_dependencies = 
    [   MemoryDep(name='buf86', index=c0, size=(65536,)),
        MemoryDep(name='buf88', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf89', index=c1, size=(64, 256, 4))]
buf91.met_dependencies = 
    [   MemoryDep(name='convolution_40', index=c0, size=(65536,)),
        MemoryDep(name='primals_122', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_37', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_121', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_358', index=c1, size=(64, 256, 4))]
buf91.group.device = cpu
buf91.group.iteration = ((64, 256, 4), ())
buf91.sizes = ([64, 256, 4], [])
class buf91_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_37', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf86', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_40', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_358', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf89', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_121', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_121', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf88', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_121', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_122', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf91', get_index_10, mul_6, None)
        return store


buf92: ExternKernelSchedulerNode(FallbackKernel)
buf92.writes = [StarDep(name='buf92')]
buf92.unmet_dependencies = [StarDep(name='buf91')]
buf92.met_dependencies = [StarDep(name='primals_121'), StarDep(name='relu_36')]
buf92.node.kernel = aten.convolution_backward


buf93: ExternKernelSchedulerNode(MultiOutput)
buf93.writes = [StarDep(name='buf93')]
buf93.unmet_dependencies = [StarDep(name='buf92')]
buf93.met_dependencies = []
buf93.node.kernel = None


buf94: ExternKernelSchedulerNode(MultiOutput)
buf94.writes = [StarDep(name='buf94')]
buf94.unmet_dependencies = [StarDep(name='buf92')]
buf94.met_dependencies = []
buf94.node.kernel = None


buf95: SchedulerNode(ComputedBuffer)
buf95.writes = [MemoryDep(name='buf95', index=c0, size=(262144,))]
buf95.unmet_dependencies = 
    [   MemoryDep(name='buf52', index=c0, size=(262144,)),
        MemoryDep(name='buf72', index=c0, size=(262144,)),
        MemoryDep(name='buf93', index=c0, size=(262144,))]
buf95.met_dependencies = 
    [   MemoryDep(name='relu_36', index=c0, size=(262144,)),
        MemoryDep(name='relu_39', index=c0, size=(262144,))]
buf95.group.device = cpu
buf95.group.iteration = ((262144,), ())
buf95.sizes = ([262144], [])
class buf95_loop_body:
    var_ranges = {z0: 262144}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_36', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('relu_39', get_index_1)
        constant_2 = ops.constant(0, torch.float32)
        le_1 = ops.le(load_1, constant_2)
        constant_3 = ops.constant(0.0, torch.float32)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf52', get_index_2)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('buf72', get_index_3)
        add = ops.add(load_2, load_3)
        where = ops.where(le_1, constant_3, add)
        get_index_4 = self.get_index('index0')
        load_4 = ops.load('buf93', get_index_4)
        add_1 = ops.add(where, load_4)
        where_1 = ops.where(le, constant_1, add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf95', get_index_5, where_1, None)
        return store


buf96_buf97: FusedSchedulerNode(NoneType)
buf96_buf97.writes = 
    [   MemoryDep(name='buf96', index=c0, size=(1024, 256)),
        MemoryDep(name='buf96', index=c0, size=(1024,)),
        MemoryDep(name='buf97', index=c0, size=(1024, 256)),
        MemoryDep(name='buf97', index=c0, size=(1024,))]
buf96_buf97.unmet_dependencies = [MemoryDep(name='buf95', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4))]
buf96_buf97.met_dependencies = 
    [   MemoryDep(name='convolution_39', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='unsqueeze_370', index=c0, size=(1024, 256))]
buf96_buf97.snodes = ['buf96', 'buf97']


buf98: SchedulerNode(ComputedBuffer)
buf98.writes = [MemoryDep(name='buf98', index=c0, size=(1024,))]
buf98.unmet_dependencies = [MemoryDep(name='buf97', index=c0, size=(1024,))]
buf98.met_dependencies = [MemoryDep(name='squeeze_118', index=c0, size=(1024,))]
buf98.group.device = cpu
buf98.group.iteration = ((1024,), ())
buf98.sizes = ([1024], [])
class buf98_loop_body:
    var_ranges = {z0: 1024}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf97', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_118', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf98', get_index_2, mul, None)
        return store


buf99: SchedulerNode(ComputedBuffer)
buf99.writes = [MemoryDep(name='buf99', index=c0, size=(262144,))]
buf99.unmet_dependencies = 
    [   MemoryDep(name='buf95', index=c0, size=(262144,)),
        MemoryDep(name='buf96', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='buf97', index=c1, size=(64, 1024, 4))]
buf99.met_dependencies = 
    [   MemoryDep(name='convolution_39', index=c0, size=(262144,)),
        MemoryDep(name='primals_119', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='squeeze_118', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='unsqueeze_370', index=c1, size=(64, 1024, 4))]
buf99.group.device = cpu
buf99.group.iteration = ((64, 1024, 4), ())
buf99.sizes = ([64, 1024, 4], [])
class buf99_loop_body:
    var_ranges = {z0: 64, z1: 1024, z2: 4}
    index0 = 4096*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf95', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('convolution_39', get_index_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('unsqueeze_370', get_index_2)
        sub = ops.sub(load_1, load_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('buf97', get_index_3)
        constant = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_3, constant)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('squeeze_118', get_index_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_118', get_index_5)
        mul_1 = ops.mul(load_4, load_5)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(load, mul_3)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('buf96', get_index_6)
        constant_1 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_6, constant_1)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_118', get_index_7)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('primals_119', get_index_8)
        mul_5 = ops.mul(load_7, load_8)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_9 = self.get_index('index0')
        store = ops.store('buf99', get_index_9, mul_6, None)
        return store


buf100: ExternKernelSchedulerNode(FallbackKernel)
buf100.writes = [StarDep(name='buf100')]
buf100.unmet_dependencies = [StarDep(name='buf99')]
buf100.met_dependencies = [StarDep(name='primals_118'), StarDep(name='relu_35')]
buf100.node.kernel = aten.convolution_backward


buf101: ExternKernelSchedulerNode(MultiOutput)
buf101.writes = [StarDep(name='buf101')]
buf101.unmet_dependencies = [StarDep(name='buf100')]
buf101.met_dependencies = []
buf101.node.kernel = None


buf102: ExternKernelSchedulerNode(MultiOutput)
buf102.writes = [StarDep(name='buf102')]
buf102.unmet_dependencies = [StarDep(name='buf100')]
buf102.met_dependencies = []
buf102.node.kernel = None


buf103_buf104: FusedSchedulerNode(NoneType)
buf103_buf104.writes = 
    [   MemoryDep(name='buf103', index=c0, size=(256, 256)),
        MemoryDep(name='buf103', index=c0, size=(256,)),
        MemoryDep(name='buf104', index=c0, size=(256, 256)),
        MemoryDep(name='buf104', index=c0, size=(256,))]
buf103_buf104.unmet_dependencies = [MemoryDep(name='buf101', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf103_buf104.met_dependencies = 
    [   MemoryDep(name='convolution_38', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_35', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_382', index=c0, size=(256, 256))]
buf103_buf104.snodes = ['buf103', 'buf104']


buf105: SchedulerNode(ComputedBuffer)
buf105.writes = [MemoryDep(name='buf105', index=c0, size=(256,))]
buf105.unmet_dependencies = [MemoryDep(name='buf104', index=c0, size=(256,))]
buf105.met_dependencies = [MemoryDep(name='squeeze_115', index=c0, size=(256,))]
buf105.group.device = cpu
buf105.group.iteration = ((256,), ())
buf105.sizes = ([256], [])
class buf105_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf104', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_115', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf105', get_index_2, mul, None)
        return store


buf106: SchedulerNode(ComputedBuffer)
buf106.writes = [MemoryDep(name='buf106', index=c0, size=(65536,))]
buf106.unmet_dependencies = 
    [   MemoryDep(name='buf101', index=c0, size=(65536,)),
        MemoryDep(name='buf103', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf104', index=c1, size=(64, 256, 4))]
buf106.met_dependencies = 
    [   MemoryDep(name='convolution_38', index=c0, size=(65536,)),
        MemoryDep(name='primals_116', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_35', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_115', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_382', index=c1, size=(64, 256, 4))]
buf106.group.device = cpu
buf106.group.iteration = ((64, 256, 4), ())
buf106.sizes = ([64, 256, 4], [])
class buf106_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_35', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf101', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_38', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_382', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf104', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_115', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_115', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf103', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_115', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_116', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf106', get_index_10, mul_6, None)
        return store


buf107: ExternKernelSchedulerNode(FallbackKernel)
buf107.writes = [StarDep(name='buf107')]
buf107.unmet_dependencies = [StarDep(name='buf106')]
buf107.met_dependencies = [StarDep(name='primals_115'), StarDep(name='relu_34')]
buf107.node.kernel = aten.convolution_backward


buf108: ExternKernelSchedulerNode(MultiOutput)
buf108.writes = [StarDep(name='buf108')]
buf108.unmet_dependencies = [StarDep(name='buf107')]
buf108.met_dependencies = []
buf108.node.kernel = None


buf109: ExternKernelSchedulerNode(MultiOutput)
buf109.writes = [StarDep(name='buf109')]
buf109.unmet_dependencies = [StarDep(name='buf107')]
buf109.met_dependencies = []
buf109.node.kernel = None


buf110_buf111: FusedSchedulerNode(NoneType)
buf110_buf111.writes = 
    [   MemoryDep(name='buf110', index=c0, size=(256, 256)),
        MemoryDep(name='buf110', index=c0, size=(256,)),
        MemoryDep(name='buf111', index=c0, size=(256, 256)),
        MemoryDep(name='buf111', index=c0, size=(256,))]
buf110_buf111.unmet_dependencies = [MemoryDep(name='buf108', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf110_buf111.met_dependencies = 
    [   MemoryDep(name='convolution_37', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_34', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_394', index=c0, size=(256, 256))]
buf110_buf111.snodes = ['buf110', 'buf111']


buf112: SchedulerNode(ComputedBuffer)
buf112.writes = [MemoryDep(name='buf112', index=c0, size=(256,))]
buf112.unmet_dependencies = [MemoryDep(name='buf111', index=c0, size=(256,))]
buf112.met_dependencies = [MemoryDep(name='squeeze_112', index=c0, size=(256,))]
buf112.group.device = cpu
buf112.group.iteration = ((256,), ())
buf112.sizes = ([256], [])
class buf112_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf111', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_112', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf112', get_index_2, mul, None)
        return store


buf113: SchedulerNode(ComputedBuffer)
buf113.writes = [MemoryDep(name='buf113', index=c0, size=(65536,))]
buf113.unmet_dependencies = 
    [   MemoryDep(name='buf108', index=c0, size=(65536,)),
        MemoryDep(name='buf110', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf111', index=c1, size=(64, 256, 4))]
buf113.met_dependencies = 
    [   MemoryDep(name='convolution_37', index=c0, size=(65536,)),
        MemoryDep(name='primals_113', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_34', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_112', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_394', index=c1, size=(64, 256, 4))]
buf113.group.device = cpu
buf113.group.iteration = ((64, 256, 4), ())
buf113.sizes = ([64, 256, 4], [])
class buf113_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_34', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf108', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_37', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_394', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf111', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_112', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_112', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf110', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_112', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_113', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf113', get_index_10, mul_6, None)
        return store


buf114: ExternKernelSchedulerNode(FallbackKernel)
buf114.writes = [StarDep(name='buf114')]
buf114.unmet_dependencies = [StarDep(name='buf113')]
buf114.met_dependencies = [StarDep(name='primals_112'), StarDep(name='relu_33')]
buf114.node.kernel = aten.convolution_backward


buf115: ExternKernelSchedulerNode(MultiOutput)
buf115.writes = [StarDep(name='buf115')]
buf115.unmet_dependencies = [StarDep(name='buf114')]
buf115.met_dependencies = []
buf115.node.kernel = None


buf116: ExternKernelSchedulerNode(MultiOutput)
buf116.writes = [StarDep(name='buf116')]
buf116.unmet_dependencies = [StarDep(name='buf114')]
buf116.met_dependencies = []
buf116.node.kernel = None


buf117_buf118: FusedSchedulerNode(NoneType)
buf117_buf118.writes = 
    [   MemoryDep(name='buf117', index=c0, size=(1024, 256)),
        MemoryDep(name='buf117', index=c0, size=(1024,)),
        MemoryDep(name='buf118', index=c0, size=(1024, 256)),
        MemoryDep(name='buf118', index=c0, size=(1024,))]
buf117_buf118.unmet_dependencies = 
    [   MemoryDep(name='buf115', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='buf95', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4))]
buf117_buf118.met_dependencies = 
    [   MemoryDep(name='convolution_36', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='relu_33', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='unsqueeze_406', index=c0, size=(1024, 256))]
buf117_buf118.snodes = ['buf117', 'buf118']


buf119: SchedulerNode(ComputedBuffer)
buf119.writes = [MemoryDep(name='buf119', index=c0, size=(262144,))]
buf119.unmet_dependencies = 
    [   MemoryDep(name='buf115', index=c0, size=(262144,)),
        MemoryDep(name='buf117', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='buf118', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='buf95', index=c0, size=(262144,))]
buf119.met_dependencies = 
    [   MemoryDep(name='convolution_36', index=c0, size=(262144,)),
        MemoryDep(name='primals_110', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='relu_33', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_109', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='unsqueeze_406', index=c1, size=(64, 1024, 4))]
buf119.group.device = cpu
buf119.group.iteration = ((64, 1024, 4), ())
buf119.sizes = ([64, 1024, 4], [])
class buf119_loop_body:
    var_ranges = {z0: 64, z1: 1024, z2: 4}
    index0 = 4096*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_33', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf95', get_index_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf115', get_index_2)
        add = ops.add(load_1, load_2)
        where = ops.where(le, constant_1, add)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('convolution_36', get_index_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('unsqueeze_406', get_index_4)
        sub = ops.sub(load_3, load_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('buf118', get_index_5)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_5, constant_2)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_109', get_index_6)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_109', get_index_7)
        mul_1 = ops.mul(load_6, load_7)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('buf117', get_index_8)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_8, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('squeeze_109', get_index_9)
        get_index_10 = self.get_index('index1')
        load_10 = ops.load('primals_110', get_index_10)
        mul_5 = ops.mul(load_9, load_10)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_11 = self.get_index('index0')
        store = ops.store('buf119', get_index_11, mul_6, None)
        return store


buf120: SchedulerNode(ComputedBuffer)
buf120.writes = [MemoryDep(name='buf120', index=c0, size=(1024,))]
buf120.unmet_dependencies = [MemoryDep(name='buf118', index=c0, size=(1024,))]
buf120.met_dependencies = [MemoryDep(name='squeeze_109', index=c0, size=(1024,))]
buf120.group.device = cpu
buf120.group.iteration = ((1024,), ())
buf120.sizes = ([1024], [])
class buf120_loop_body:
    var_ranges = {z0: 1024}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf118', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_109', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf120', get_index_2, mul, None)
        return store


buf121: ExternKernelSchedulerNode(FallbackKernel)
buf121.writes = [StarDep(name='buf121')]
buf121.unmet_dependencies = [StarDep(name='buf119')]
buf121.met_dependencies = [StarDep(name='primals_109'), StarDep(name='relu_32')]
buf121.node.kernel = aten.convolution_backward


buf122: ExternKernelSchedulerNode(MultiOutput)
buf122.writes = [StarDep(name='buf122')]
buf122.unmet_dependencies = [StarDep(name='buf121')]
buf122.met_dependencies = []
buf122.node.kernel = None


buf123: ExternKernelSchedulerNode(MultiOutput)
buf123.writes = [StarDep(name='buf123')]
buf123.unmet_dependencies = [StarDep(name='buf121')]
buf123.met_dependencies = []
buf123.node.kernel = None


buf124_buf125: FusedSchedulerNode(NoneType)
buf124_buf125.writes = 
    [   MemoryDep(name='buf124', index=c0, size=(256, 256)),
        MemoryDep(name='buf124', index=c0, size=(256,)),
        MemoryDep(name='buf125', index=c0, size=(256, 256)),
        MemoryDep(name='buf125', index=c0, size=(256,))]
buf124_buf125.unmet_dependencies = [MemoryDep(name='buf122', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf124_buf125.met_dependencies = 
    [   MemoryDep(name='convolution_35', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_32', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_418', index=c0, size=(256, 256))]
buf124_buf125.snodes = ['buf124', 'buf125']


buf126: SchedulerNode(ComputedBuffer)
buf126.writes = [MemoryDep(name='buf126', index=c0, size=(256,))]
buf126.unmet_dependencies = [MemoryDep(name='buf125', index=c0, size=(256,))]
buf126.met_dependencies = [MemoryDep(name='squeeze_106', index=c0, size=(256,))]
buf126.group.device = cpu
buf126.group.iteration = ((256,), ())
buf126.sizes = ([256], [])
class buf126_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf125', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_106', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf126', get_index_2, mul, None)
        return store


buf127: SchedulerNode(ComputedBuffer)
buf127.writes = [MemoryDep(name='buf127', index=c0, size=(65536,))]
buf127.unmet_dependencies = 
    [   MemoryDep(name='buf122', index=c0, size=(65536,)),
        MemoryDep(name='buf124', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf125', index=c1, size=(64, 256, 4))]
buf127.met_dependencies = 
    [   MemoryDep(name='convolution_35', index=c0, size=(65536,)),
        MemoryDep(name='primals_107', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_32', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_106', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_418', index=c1, size=(64, 256, 4))]
buf127.group.device = cpu
buf127.group.iteration = ((64, 256, 4), ())
buf127.sizes = ([64, 256, 4], [])
class buf127_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_32', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf122', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_35', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_418', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf125', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_106', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_106', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf124', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_106', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_107', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf127', get_index_10, mul_6, None)
        return store


buf128: ExternKernelSchedulerNode(FallbackKernel)
buf128.writes = [StarDep(name='buf128')]
buf128.unmet_dependencies = [StarDep(name='buf127')]
buf128.met_dependencies = [StarDep(name='primals_106'), StarDep(name='relu_31')]
buf128.node.kernel = aten.convolution_backward


buf129: ExternKernelSchedulerNode(MultiOutput)
buf129.writes = [StarDep(name='buf129')]
buf129.unmet_dependencies = [StarDep(name='buf128')]
buf129.met_dependencies = []
buf129.node.kernel = None


buf130: ExternKernelSchedulerNode(MultiOutput)
buf130.writes = [StarDep(name='buf130')]
buf130.unmet_dependencies = [StarDep(name='buf128')]
buf130.met_dependencies = []
buf130.node.kernel = None


buf131_buf132: FusedSchedulerNode(NoneType)
buf131_buf132.writes = 
    [   MemoryDep(name='buf131', index=c0, size=(256, 256)),
        MemoryDep(name='buf131', index=c0, size=(256,)),
        MemoryDep(name='buf132', index=c0, size=(256, 256)),
        MemoryDep(name='buf132', index=c0, size=(256,))]
buf131_buf132.unmet_dependencies = [MemoryDep(name='buf129', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf131_buf132.met_dependencies = 
    [   MemoryDep(name='convolution_34', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_31', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_430', index=c0, size=(256, 256))]
buf131_buf132.snodes = ['buf131', 'buf132']


buf133: SchedulerNode(ComputedBuffer)
buf133.writes = [MemoryDep(name='buf133', index=c0, size=(256,))]
buf133.unmet_dependencies = [MemoryDep(name='buf132', index=c0, size=(256,))]
buf133.met_dependencies = [MemoryDep(name='squeeze_103', index=c0, size=(256,))]
buf133.group.device = cpu
buf133.group.iteration = ((256,), ())
buf133.sizes = ([256], [])
class buf133_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf132', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_103', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf133', get_index_2, mul, None)
        return store


buf134: SchedulerNode(ComputedBuffer)
buf134.writes = [MemoryDep(name='buf134', index=c0, size=(65536,))]
buf134.unmet_dependencies = 
    [   MemoryDep(name='buf129', index=c0, size=(65536,)),
        MemoryDep(name='buf131', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf132', index=c1, size=(64, 256, 4))]
buf134.met_dependencies = 
    [   MemoryDep(name='convolution_34', index=c0, size=(65536,)),
        MemoryDep(name='primals_104', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_31', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_103', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_430', index=c1, size=(64, 256, 4))]
buf134.group.device = cpu
buf134.group.iteration = ((64, 256, 4), ())
buf134.sizes = ([64, 256, 4], [])
class buf134_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_31', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf129', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_34', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_430', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf132', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_103', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_103', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf131', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_103', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_104', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf134', get_index_10, mul_6, None)
        return store


buf135: ExternKernelSchedulerNode(FallbackKernel)
buf135.writes = [StarDep(name='buf135')]
buf135.unmet_dependencies = [StarDep(name='buf134')]
buf135.met_dependencies = [StarDep(name='primals_103'), StarDep(name='relu_30')]
buf135.node.kernel = aten.convolution_backward


buf136: ExternKernelSchedulerNode(MultiOutput)
buf136.writes = [StarDep(name='buf136')]
buf136.unmet_dependencies = [StarDep(name='buf135')]
buf136.met_dependencies = []
buf136.node.kernel = None


buf137: ExternKernelSchedulerNode(MultiOutput)
buf137.writes = [StarDep(name='buf137')]
buf137.unmet_dependencies = [StarDep(name='buf135')]
buf137.met_dependencies = []
buf137.node.kernel = None


buf138: SchedulerNode(ComputedBuffer)
buf138.writes = [MemoryDep(name='buf138', index=c0, size=(262144,))]
buf138.unmet_dependencies = 
    [   MemoryDep(name='buf115', index=c0, size=(262144,)),
        MemoryDep(name='buf136', index=c0, size=(262144,)),
        MemoryDep(name='buf95', index=c0, size=(262144,))]
buf138.met_dependencies = 
    [   MemoryDep(name='relu_30', index=c0, size=(262144,)),
        MemoryDep(name='relu_33', index=c0, size=(262144,))]
buf138.group.device = cpu
buf138.group.iteration = ((262144,), ())
buf138.sizes = ([262144], [])
class buf138_loop_body:
    var_ranges = {z0: 262144}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_30', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('relu_33', get_index_1)
        constant_2 = ops.constant(0, torch.float32)
        le_1 = ops.le(load_1, constant_2)
        constant_3 = ops.constant(0.0, torch.float32)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf95', get_index_2)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('buf115', get_index_3)
        add = ops.add(load_2, load_3)
        where = ops.where(le_1, constant_3, add)
        get_index_4 = self.get_index('index0')
        load_4 = ops.load('buf136', get_index_4)
        add_1 = ops.add(where, load_4)
        where_1 = ops.where(le, constant_1, add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf138', get_index_5, where_1, None)
        return store


buf139_buf140: FusedSchedulerNode(NoneType)
buf139_buf140.writes = 
    [   MemoryDep(name='buf139', index=c0, size=(1024, 256)),
        MemoryDep(name='buf139', index=c0, size=(1024,)),
        MemoryDep(name='buf140', index=c0, size=(1024, 256)),
        MemoryDep(name='buf140', index=c0, size=(1024,))]
buf139_buf140.unmet_dependencies = [MemoryDep(name='buf138', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4))]
buf139_buf140.met_dependencies = 
    [   MemoryDep(name='convolution_33', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='unsqueeze_442', index=c0, size=(1024, 256))]
buf139_buf140.snodes = ['buf139', 'buf140']


buf141: SchedulerNode(ComputedBuffer)
buf141.writes = [MemoryDep(name='buf141', index=c0, size=(1024,))]
buf141.unmet_dependencies = [MemoryDep(name='buf140', index=c0, size=(1024,))]
buf141.met_dependencies = [MemoryDep(name='squeeze_100', index=c0, size=(1024,))]
buf141.group.device = cpu
buf141.group.iteration = ((1024,), ())
buf141.sizes = ([1024], [])
class buf141_loop_body:
    var_ranges = {z0: 1024}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf140', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_100', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf141', get_index_2, mul, None)
        return store


buf142: SchedulerNode(ComputedBuffer)
buf142.writes = [MemoryDep(name='buf142', index=c0, size=(262144,))]
buf142.unmet_dependencies = 
    [   MemoryDep(name='buf138', index=c0, size=(262144,)),
        MemoryDep(name='buf139', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='buf140', index=c1, size=(64, 1024, 4))]
buf142.met_dependencies = 
    [   MemoryDep(name='convolution_33', index=c0, size=(262144,)),
        MemoryDep(name='primals_101', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='squeeze_100', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='unsqueeze_442', index=c1, size=(64, 1024, 4))]
buf142.group.device = cpu
buf142.group.iteration = ((64, 1024, 4), ())
buf142.sizes = ([64, 1024, 4], [])
class buf142_loop_body:
    var_ranges = {z0: 64, z1: 1024, z2: 4}
    index0 = 4096*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf138', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('convolution_33', get_index_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('unsqueeze_442', get_index_2)
        sub = ops.sub(load_1, load_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('buf140', get_index_3)
        constant = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_3, constant)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('squeeze_100', get_index_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_100', get_index_5)
        mul_1 = ops.mul(load_4, load_5)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(load, mul_3)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('buf139', get_index_6)
        constant_1 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_6, constant_1)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_100', get_index_7)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('primals_101', get_index_8)
        mul_5 = ops.mul(load_7, load_8)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_9 = self.get_index('index0')
        store = ops.store('buf142', get_index_9, mul_6, None)
        return store


buf143: ExternKernelSchedulerNode(FallbackKernel)
buf143.writes = [StarDep(name='buf143')]
buf143.unmet_dependencies = [StarDep(name='buf142')]
buf143.met_dependencies = [StarDep(name='primals_100'), StarDep(name='relu_29')]
buf143.node.kernel = aten.convolution_backward


buf144: ExternKernelSchedulerNode(MultiOutput)
buf144.writes = [StarDep(name='buf144')]
buf144.unmet_dependencies = [StarDep(name='buf143')]
buf144.met_dependencies = []
buf144.node.kernel = None


buf145: ExternKernelSchedulerNode(MultiOutput)
buf145.writes = [StarDep(name='buf145')]
buf145.unmet_dependencies = [StarDep(name='buf143')]
buf145.met_dependencies = []
buf145.node.kernel = None


buf146_buf147: FusedSchedulerNode(NoneType)
buf146_buf147.writes = 
    [   MemoryDep(name='buf146', index=c0, size=(256, 256)),
        MemoryDep(name='buf146', index=c0, size=(256,)),
        MemoryDep(name='buf147', index=c0, size=(256, 256)),
        MemoryDep(name='buf147', index=c0, size=(256,))]
buf146_buf147.unmet_dependencies = [MemoryDep(name='buf144', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf146_buf147.met_dependencies = 
    [   MemoryDep(name='convolution_32', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_29', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_454', index=c0, size=(256, 256))]
buf146_buf147.snodes = ['buf146', 'buf147']


buf148: SchedulerNode(ComputedBuffer)
buf148.writes = [MemoryDep(name='buf148', index=c0, size=(256,))]
buf148.unmet_dependencies = [MemoryDep(name='buf147', index=c0, size=(256,))]
buf148.met_dependencies = [MemoryDep(name='squeeze_97', index=c0, size=(256,))]
buf148.group.device = cpu
buf148.group.iteration = ((256,), ())
buf148.sizes = ([256], [])
class buf148_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf147', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_97', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf148', get_index_2, mul, None)
        return store


buf149: SchedulerNode(ComputedBuffer)
buf149.writes = [MemoryDep(name='buf149', index=c0, size=(65536,))]
buf149.unmet_dependencies = 
    [   MemoryDep(name='buf144', index=c0, size=(65536,)),
        MemoryDep(name='buf146', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf147', index=c1, size=(64, 256, 4))]
buf149.met_dependencies = 
    [   MemoryDep(name='convolution_32', index=c0, size=(65536,)),
        MemoryDep(name='primals_98', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_29', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_97', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_454', index=c1, size=(64, 256, 4))]
buf149.group.device = cpu
buf149.group.iteration = ((64, 256, 4), ())
buf149.sizes = ([64, 256, 4], [])
class buf149_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_29', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf144', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_32', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_454', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf147', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_97', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_97', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf146', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_97', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_98', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf149', get_index_10, mul_6, None)
        return store


buf150: ExternKernelSchedulerNode(FallbackKernel)
buf150.writes = [StarDep(name='buf150')]
buf150.unmet_dependencies = [StarDep(name='buf149')]
buf150.met_dependencies = [StarDep(name='primals_97'), StarDep(name='relu_28')]
buf150.node.kernel = aten.convolution_backward


buf151: ExternKernelSchedulerNode(MultiOutput)
buf151.writes = [StarDep(name='buf151')]
buf151.unmet_dependencies = [StarDep(name='buf150')]
buf151.met_dependencies = []
buf151.node.kernel = None


buf152: ExternKernelSchedulerNode(MultiOutput)
buf152.writes = [StarDep(name='buf152')]
buf152.unmet_dependencies = [StarDep(name='buf150')]
buf152.met_dependencies = []
buf152.node.kernel = None


buf153_buf154: FusedSchedulerNode(NoneType)
buf153_buf154.writes = 
    [   MemoryDep(name='buf153', index=c0, size=(256, 256)),
        MemoryDep(name='buf153', index=c0, size=(256,)),
        MemoryDep(name='buf154', index=c0, size=(256, 256)),
        MemoryDep(name='buf154', index=c0, size=(256,))]
buf153_buf154.unmet_dependencies = [MemoryDep(name='buf151', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf153_buf154.met_dependencies = 
    [   MemoryDep(name='convolution_31', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_28', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_466', index=c0, size=(256, 256))]
buf153_buf154.snodes = ['buf153', 'buf154']


buf155: SchedulerNode(ComputedBuffer)
buf155.writes = [MemoryDep(name='buf155', index=c0, size=(256,))]
buf155.unmet_dependencies = [MemoryDep(name='buf154', index=c0, size=(256,))]
buf155.met_dependencies = [MemoryDep(name='squeeze_94', index=c0, size=(256,))]
buf155.group.device = cpu
buf155.group.iteration = ((256,), ())
buf155.sizes = ([256], [])
class buf155_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf154', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_94', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf155', get_index_2, mul, None)
        return store


buf156: SchedulerNode(ComputedBuffer)
buf156.writes = [MemoryDep(name='buf156', index=c0, size=(65536,))]
buf156.unmet_dependencies = 
    [   MemoryDep(name='buf151', index=c0, size=(65536,)),
        MemoryDep(name='buf153', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf154', index=c1, size=(64, 256, 4))]
buf156.met_dependencies = 
    [   MemoryDep(name='convolution_31', index=c0, size=(65536,)),
        MemoryDep(name='primals_95', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_28', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_94', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_466', index=c1, size=(64, 256, 4))]
buf156.group.device = cpu
buf156.group.iteration = ((64, 256, 4), ())
buf156.sizes = ([64, 256, 4], [])
class buf156_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_28', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf151', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_31', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_466', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf154', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_94', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_94', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf153', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_94', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_95', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf156', get_index_10, mul_6, None)
        return store


buf157: ExternKernelSchedulerNode(FallbackKernel)
buf157.writes = [StarDep(name='buf157')]
buf157.unmet_dependencies = [StarDep(name='buf156')]
buf157.met_dependencies = [StarDep(name='primals_94'), StarDep(name='relu_27')]
buf157.node.kernel = aten.convolution_backward


buf158: ExternKernelSchedulerNode(MultiOutput)
buf158.writes = [StarDep(name='buf158')]
buf158.unmet_dependencies = [StarDep(name='buf157')]
buf158.met_dependencies = []
buf158.node.kernel = None


buf159: ExternKernelSchedulerNode(MultiOutput)
buf159.writes = [StarDep(name='buf159')]
buf159.unmet_dependencies = [StarDep(name='buf157')]
buf159.met_dependencies = []
buf159.node.kernel = None


buf160_buf161: FusedSchedulerNode(NoneType)
buf160_buf161.writes = 
    [   MemoryDep(name='buf160', index=c0, size=(1024, 256)),
        MemoryDep(name='buf160', index=c0, size=(1024,)),
        MemoryDep(name='buf161', index=c0, size=(1024, 256)),
        MemoryDep(name='buf161', index=c0, size=(1024,))]
buf160_buf161.unmet_dependencies = 
    [   MemoryDep(name='buf138', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='buf158', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4))]
buf160_buf161.met_dependencies = 
    [   MemoryDep(name='convolution_30', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='relu_27', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='unsqueeze_478', index=c0, size=(1024, 256))]
buf160_buf161.snodes = ['buf160', 'buf161']


buf162: SchedulerNode(ComputedBuffer)
buf162.writes = [MemoryDep(name='buf162', index=c0, size=(262144,))]
buf162.unmet_dependencies = 
    [   MemoryDep(name='buf138', index=c0, size=(262144,)),
        MemoryDep(name='buf158', index=c0, size=(262144,)),
        MemoryDep(name='buf160', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='buf161', index=c1, size=(64, 1024, 4))]
buf162.met_dependencies = 
    [   MemoryDep(name='convolution_30', index=c0, size=(262144,)),
        MemoryDep(name='primals_92', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='relu_27', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_91', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='unsqueeze_478', index=c1, size=(64, 1024, 4))]
buf162.group.device = cpu
buf162.group.iteration = ((64, 1024, 4), ())
buf162.sizes = ([64, 1024, 4], [])
class buf162_loop_body:
    var_ranges = {z0: 64, z1: 1024, z2: 4}
    index0 = 4096*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_27', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf138', get_index_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf158', get_index_2)
        add = ops.add(load_1, load_2)
        where = ops.where(le, constant_1, add)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('convolution_30', get_index_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('unsqueeze_478', get_index_4)
        sub = ops.sub(load_3, load_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('buf161', get_index_5)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_5, constant_2)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_91', get_index_6)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_91', get_index_7)
        mul_1 = ops.mul(load_6, load_7)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('buf160', get_index_8)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_8, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('squeeze_91', get_index_9)
        get_index_10 = self.get_index('index1')
        load_10 = ops.load('primals_92', get_index_10)
        mul_5 = ops.mul(load_9, load_10)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_11 = self.get_index('index0')
        store = ops.store('buf162', get_index_11, mul_6, None)
        return store


buf163: SchedulerNode(ComputedBuffer)
buf163.writes = [MemoryDep(name='buf163', index=c0, size=(1024,))]
buf163.unmet_dependencies = [MemoryDep(name='buf161', index=c0, size=(1024,))]
buf163.met_dependencies = [MemoryDep(name='squeeze_91', index=c0, size=(1024,))]
buf163.group.device = cpu
buf163.group.iteration = ((1024,), ())
buf163.sizes = ([1024], [])
class buf163_loop_body:
    var_ranges = {z0: 1024}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf161', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_91', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf163', get_index_2, mul, None)
        return store


buf164: ExternKernelSchedulerNode(FallbackKernel)
buf164.writes = [StarDep(name='buf164')]
buf164.unmet_dependencies = [StarDep(name='buf162')]
buf164.met_dependencies = [StarDep(name='primals_91'), StarDep(name='relu_26')]
buf164.node.kernel = aten.convolution_backward


buf165: ExternKernelSchedulerNode(MultiOutput)
buf165.writes = [StarDep(name='buf165')]
buf165.unmet_dependencies = [StarDep(name='buf164')]
buf165.met_dependencies = []
buf165.node.kernel = None


buf166: ExternKernelSchedulerNode(MultiOutput)
buf166.writes = [StarDep(name='buf166')]
buf166.unmet_dependencies = [StarDep(name='buf164')]
buf166.met_dependencies = []
buf166.node.kernel = None


buf167_buf168: FusedSchedulerNode(NoneType)
buf167_buf168.writes = 
    [   MemoryDep(name='buf167', index=c0, size=(256, 256)),
        MemoryDep(name='buf167', index=c0, size=(256,)),
        MemoryDep(name='buf168', index=c0, size=(256, 256)),
        MemoryDep(name='buf168', index=c0, size=(256,))]
buf167_buf168.unmet_dependencies = [MemoryDep(name='buf165', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf167_buf168.met_dependencies = 
    [   MemoryDep(name='convolution_29', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_26', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_490', index=c0, size=(256, 256))]
buf167_buf168.snodes = ['buf167', 'buf168']


buf169: SchedulerNode(ComputedBuffer)
buf169.writes = [MemoryDep(name='buf169', index=c0, size=(256,))]
buf169.unmet_dependencies = [MemoryDep(name='buf168', index=c0, size=(256,))]
buf169.met_dependencies = [MemoryDep(name='squeeze_88', index=c0, size=(256,))]
buf169.group.device = cpu
buf169.group.iteration = ((256,), ())
buf169.sizes = ([256], [])
class buf169_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf168', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_88', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf169', get_index_2, mul, None)
        return store


buf170: SchedulerNode(ComputedBuffer)
buf170.writes = [MemoryDep(name='buf170', index=c0, size=(65536,))]
buf170.unmet_dependencies = 
    [   MemoryDep(name='buf165', index=c0, size=(65536,)),
        MemoryDep(name='buf167', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf168', index=c1, size=(64, 256, 4))]
buf170.met_dependencies = 
    [   MemoryDep(name='convolution_29', index=c0, size=(65536,)),
        MemoryDep(name='primals_89', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_26', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_88', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_490', index=c1, size=(64, 256, 4))]
buf170.group.device = cpu
buf170.group.iteration = ((64, 256, 4), ())
buf170.sizes = ([64, 256, 4], [])
class buf170_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_26', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf165', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_29', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_490', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf168', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_88', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_88', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf167', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_88', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_89', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf170', get_index_10, mul_6, None)
        return store


buf171: ExternKernelSchedulerNode(FallbackKernel)
buf171.writes = [StarDep(name='buf171')]
buf171.unmet_dependencies = [StarDep(name='buf170')]
buf171.met_dependencies = [StarDep(name='primals_88'), StarDep(name='relu_25')]
buf171.node.kernel = aten.convolution_backward


buf172: ExternKernelSchedulerNode(MultiOutput)
buf172.writes = [StarDep(name='buf172')]
buf172.unmet_dependencies = [StarDep(name='buf171')]
buf172.met_dependencies = []
buf172.node.kernel = None


buf173: ExternKernelSchedulerNode(MultiOutput)
buf173.writes = [StarDep(name='buf173')]
buf173.unmet_dependencies = [StarDep(name='buf171')]
buf173.met_dependencies = []
buf173.node.kernel = None


buf174_buf175: FusedSchedulerNode(NoneType)
buf174_buf175.writes = 
    [   MemoryDep(name='buf174', index=c0, size=(256, 256)),
        MemoryDep(name='buf174', index=c0, size=(256,)),
        MemoryDep(name='buf175', index=c0, size=(256, 256)),
        MemoryDep(name='buf175', index=c0, size=(256,))]
buf174_buf175.unmet_dependencies = [MemoryDep(name='buf172', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf174_buf175.met_dependencies = 
    [   MemoryDep(name='convolution_28', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_25', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_502', index=c0, size=(256, 256))]
buf174_buf175.snodes = ['buf174', 'buf175']


buf176: SchedulerNode(ComputedBuffer)
buf176.writes = [MemoryDep(name='buf176', index=c0, size=(256,))]
buf176.unmet_dependencies = [MemoryDep(name='buf175', index=c0, size=(256,))]
buf176.met_dependencies = [MemoryDep(name='squeeze_85', index=c0, size=(256,))]
buf176.group.device = cpu
buf176.group.iteration = ((256,), ())
buf176.sizes = ([256], [])
class buf176_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf175', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_85', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf176', get_index_2, mul, None)
        return store


buf177: SchedulerNode(ComputedBuffer)
buf177.writes = [MemoryDep(name='buf177', index=c0, size=(65536,))]
buf177.unmet_dependencies = 
    [   MemoryDep(name='buf172', index=c0, size=(65536,)),
        MemoryDep(name='buf174', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf175', index=c1, size=(64, 256, 4))]
buf177.met_dependencies = 
    [   MemoryDep(name='convolution_28', index=c0, size=(65536,)),
        MemoryDep(name='primals_86', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_25', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_85', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_502', index=c1, size=(64, 256, 4))]
buf177.group.device = cpu
buf177.group.iteration = ((64, 256, 4), ())
buf177.sizes = ([64, 256, 4], [])
class buf177_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_25', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf172', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_28', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_502', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf175', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_85', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_85', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf174', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_85', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_86', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf177', get_index_10, mul_6, None)
        return store


buf178: ExternKernelSchedulerNode(FallbackKernel)
buf178.writes = [StarDep(name='buf178')]
buf178.unmet_dependencies = [StarDep(name='buf177')]
buf178.met_dependencies = [StarDep(name='primals_85'), StarDep(name='relu_24')]
buf178.node.kernel = aten.convolution_backward


buf179: ExternKernelSchedulerNode(MultiOutput)
buf179.writes = [StarDep(name='buf179')]
buf179.unmet_dependencies = [StarDep(name='buf178')]
buf179.met_dependencies = []
buf179.node.kernel = None


buf180: ExternKernelSchedulerNode(MultiOutput)
buf180.writes = [StarDep(name='buf180')]
buf180.unmet_dependencies = [StarDep(name='buf178')]
buf180.met_dependencies = []
buf180.node.kernel = None


buf181: SchedulerNode(ComputedBuffer)
buf181.writes = [MemoryDep(name='buf181', index=c0, size=(262144,))]
buf181.unmet_dependencies = 
    [   MemoryDep(name='buf138', index=c0, size=(262144,)),
        MemoryDep(name='buf158', index=c0, size=(262144,)),
        MemoryDep(name='buf179', index=c0, size=(262144,))]
buf181.met_dependencies = 
    [   MemoryDep(name='relu_24', index=c0, size=(262144,)),
        MemoryDep(name='relu_27', index=c0, size=(262144,))]
buf181.group.device = cpu
buf181.group.iteration = ((262144,), ())
buf181.sizes = ([262144], [])
class buf181_loop_body:
    var_ranges = {z0: 262144}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_24', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('relu_27', get_index_1)
        constant_2 = ops.constant(0, torch.float32)
        le_1 = ops.le(load_1, constant_2)
        constant_3 = ops.constant(0.0, torch.float32)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf138', get_index_2)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('buf158', get_index_3)
        add = ops.add(load_2, load_3)
        where = ops.where(le_1, constant_3, add)
        get_index_4 = self.get_index('index0')
        load_4 = ops.load('buf179', get_index_4)
        add_1 = ops.add(where, load_4)
        where_1 = ops.where(le, constant_1, add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf181', get_index_5, where_1, None)
        return store


buf182_buf183_buf189: FusedSchedulerNode(NoneType)
buf182_buf183_buf189.writes = 
    [   MemoryDep(name='buf182', index=c0, size=(1024, 256)),
        MemoryDep(name='buf182', index=c0, size=(1024,)),
        MemoryDep(name='buf183', index=c0, size=(1024, 256)),
        MemoryDep(name='buf183', index=c0, size=(1024,)),
        MemoryDep(name='buf189', index=c0, size=(1024, 256)),
        MemoryDep(name='buf189', index=c0, size=(1024,))]
buf182_buf183_buf189.unmet_dependencies = [MemoryDep(name='buf181', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4))]
buf182_buf183_buf189.met_dependencies = 
    [   MemoryDep(name='convolution_26', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='convolution_27', index=4*c0 + 4096*c1 + c2, size=(1024, 64, 4)),
        MemoryDep(name='unsqueeze_514', index=c0, size=(1024, 256)),
        MemoryDep(name='unsqueeze_526', index=c0, size=(1024, 256))]
buf182_buf183_buf189.snodes = ['buf182', 'buf183', 'buf189']


buf184: SchedulerNode(ComputedBuffer)
buf184.writes = [MemoryDep(name='buf184', index=c0, size=(1024,))]
buf184.unmet_dependencies = [MemoryDep(name='buf183', index=c0, size=(1024,))]
buf184.met_dependencies = [MemoryDep(name='squeeze_82', index=c0, size=(1024,))]
buf184.group.device = cpu
buf184.group.iteration = ((1024,), ())
buf184.sizes = ([1024], [])
class buf184_loop_body:
    var_ranges = {z0: 1024}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf183', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_82', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf184', get_index_2, mul, None)
        return store


buf185_buf191: FusedSchedulerNode(NoneType)
buf185_buf191.writes = 
    [   MemoryDep(name='buf185', index=c0, size=(262144,)),
        MemoryDep(name='buf191', index=c0, size=(262144,))]
buf185_buf191.unmet_dependencies = 
    [   MemoryDep(name='buf181', index=c0, size=(262144,)),
        MemoryDep(name='buf182', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='buf183', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='buf189', index=c1, size=(64, 1024, 4))]
buf185_buf191.met_dependencies = 
    [   MemoryDep(name='convolution_26', index=c0, size=(262144,)),
        MemoryDep(name='convolution_27', index=c0, size=(262144,)),
        MemoryDep(name='primals_80', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='primals_83', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='squeeze_79', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='squeeze_82', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='unsqueeze_514', index=c1, size=(64, 1024, 4)),
        MemoryDep(name='unsqueeze_526', index=c1, size=(64, 1024, 4))]
buf185_buf191.snodes = ['buf185', 'buf191']


buf186: ExternKernelSchedulerNode(FallbackKernel)
buf186.writes = [StarDep(name='buf186')]
buf186.unmet_dependencies = [StarDep(name='buf185')]
buf186.met_dependencies = [StarDep(name='primals_82'), StarDep(name='relu_21')]
buf186.node.kernel = aten.convolution_backward


buf187: ExternKernelSchedulerNode(MultiOutput)
buf187.writes = [StarDep(name='buf187')]
buf187.unmet_dependencies = [StarDep(name='buf186')]
buf187.met_dependencies = []
buf187.node.kernel = None


buf188: ExternKernelSchedulerNode(MultiOutput)
buf188.writes = [StarDep(name='buf188')]
buf188.unmet_dependencies = [StarDep(name='buf186')]
buf188.met_dependencies = []
buf188.node.kernel = None


buf190: SchedulerNode(ComputedBuffer)
buf190.writes = [MemoryDep(name='buf190', index=c0, size=(1024,))]
buf190.unmet_dependencies = [MemoryDep(name='buf189', index=c0, size=(1024,))]
buf190.met_dependencies = [MemoryDep(name='squeeze_79', index=c0, size=(1024,))]
buf190.group.device = cpu
buf190.group.iteration = ((1024,), ())
buf190.sizes = ([1024], [])
class buf190_loop_body:
    var_ranges = {z0: 1024}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf189', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_79', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf190', get_index_2, mul, None)
        return store


buf192: ExternKernelSchedulerNode(FallbackKernel)
buf192.writes = [StarDep(name='buf192')]
buf192.unmet_dependencies = [StarDep(name='buf191')]
buf192.met_dependencies = [StarDep(name='primals_79'), StarDep(name='relu_23')]
buf192.node.kernel = aten.convolution_backward


buf193: ExternKernelSchedulerNode(MultiOutput)
buf193.writes = [StarDep(name='buf193')]
buf193.unmet_dependencies = [StarDep(name='buf192')]
buf193.met_dependencies = []
buf193.node.kernel = None


buf194: ExternKernelSchedulerNode(MultiOutput)
buf194.writes = [StarDep(name='buf194')]
buf194.unmet_dependencies = [StarDep(name='buf192')]
buf194.met_dependencies = []
buf194.node.kernel = None


buf195_buf196: FusedSchedulerNode(NoneType)
buf195_buf196.writes = 
    [   MemoryDep(name='buf195', index=c0, size=(256, 256)),
        MemoryDep(name='buf195', index=c0, size=(256,)),
        MemoryDep(name='buf196', index=c0, size=(256, 256)),
        MemoryDep(name='buf196', index=c0, size=(256,))]
buf195_buf196.unmet_dependencies = [MemoryDep(name='buf193', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4))]
buf195_buf196.met_dependencies = 
    [   MemoryDep(name='convolution_25', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='relu_23', index=4*c0 + 1024*c1 + c2, size=(256, 64, 4)),
        MemoryDep(name='unsqueeze_538', index=c0, size=(256, 256))]
buf195_buf196.snodes = ['buf195', 'buf196']


buf197: SchedulerNode(ComputedBuffer)
buf197.writes = [MemoryDep(name='buf197', index=c0, size=(256,))]
buf197.unmet_dependencies = [MemoryDep(name='buf196', index=c0, size=(256,))]
buf197.met_dependencies = [MemoryDep(name='squeeze_76', index=c0, size=(256,))]
buf197.group.device = cpu
buf197.group.iteration = ((256,), ())
buf197.sizes = ([256], [])
class buf197_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf196', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_76', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf197', get_index_2, mul, None)
        return store


buf198: SchedulerNode(ComputedBuffer)
buf198.writes = [MemoryDep(name='buf198', index=c0, size=(65536,))]
buf198.unmet_dependencies = 
    [   MemoryDep(name='buf193', index=c0, size=(65536,)),
        MemoryDep(name='buf195', index=c1, size=(64, 256, 4)),
        MemoryDep(name='buf196', index=c1, size=(64, 256, 4))]
buf198.met_dependencies = 
    [   MemoryDep(name='convolution_25', index=c0, size=(65536,)),
        MemoryDep(name='primals_77', index=c1, size=(64, 256, 4)),
        MemoryDep(name='relu_23', index=c0, size=(65536,)),
        MemoryDep(name='squeeze_76', index=c1, size=(64, 256, 4)),
        MemoryDep(name='unsqueeze_538', index=c1, size=(64, 256, 4))]
buf198.group.device = cpu
buf198.group.iteration = ((64, 256, 4), ())
buf198.sizes = ([64, 256, 4], [])
class buf198_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 4}
    index0 = 1024*z0 + 4*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_23', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf193', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_25', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_538', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf196', get_index_4)
        constant_2 = ops.constant(0.00390625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_76', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_76', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf195', get_index_7)
        constant_3 = ops.constant(0.00390625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_76', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_77', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf198', get_index_10, mul_6, None)
        return store


buf199: ExternKernelSchedulerNode(FallbackKernel)
buf199.writes = [StarDep(name='buf199')]
buf199.unmet_dependencies = [StarDep(name='buf198')]
buf199.met_dependencies = [StarDep(name='primals_76'), StarDep(name='relu_22')]
buf199.node.kernel = aten.convolution_backward


buf200: ExternKernelSchedulerNode(MultiOutput)
buf200.writes = [StarDep(name='buf200')]
buf200.unmet_dependencies = [StarDep(name='buf199')]
buf200.met_dependencies = []
buf200.node.kernel = None


buf201: ExternKernelSchedulerNode(MultiOutput)
buf201.writes = [StarDep(name='buf201')]
buf201.unmet_dependencies = [StarDep(name='buf199')]
buf201.met_dependencies = []
buf201.node.kernel = None


buf202_buf203: FusedSchedulerNode(NoneType)
buf202_buf203.writes = 
    [   MemoryDep(name='buf202', index=c0, size=(256, 1024)),
        MemoryDep(name='buf202', index=c0, size=(256,)),
        MemoryDep(name='buf203', index=c0, size=(256, 1024)),
        MemoryDep(name='buf203', index=c0, size=(256,))]
buf202_buf203.unmet_dependencies = [MemoryDep(name='buf200', index=16*c0 + 4096*c1 + c2, size=(256, 64, 16))]
buf202_buf203.met_dependencies = 
    [   MemoryDep(name='convolution_24', index=16*c0 + 4096*c1 + c2, size=(256, 64, 16)),
        MemoryDep(name='relu_22', index=16*c0 + 4096*c1 + c2, size=(256, 64, 16)),
        MemoryDep(name='unsqueeze_550', index=c0, size=(256, 1024))]
buf202_buf203.snodes = ['buf202', 'buf203']


buf204: SchedulerNode(ComputedBuffer)
buf204.writes = [MemoryDep(name='buf204', index=c0, size=(256,))]
buf204.unmet_dependencies = [MemoryDep(name='buf203', index=c0, size=(256,))]
buf204.met_dependencies = [MemoryDep(name='squeeze_73', index=c0, size=(256,))]
buf204.group.device = cpu
buf204.group.iteration = ((256,), ())
buf204.sizes = ([256], [])
class buf204_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf203', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_73', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf204', get_index_2, mul, None)
        return store


buf205: SchedulerNode(ComputedBuffer)
buf205.writes = [MemoryDep(name='buf205', index=c0, size=(262144,))]
buf205.unmet_dependencies = 
    [   MemoryDep(name='buf200', index=c0, size=(262144,)),
        MemoryDep(name='buf202', index=c1, size=(64, 256, 16)),
        MemoryDep(name='buf203', index=c1, size=(64, 256, 16))]
buf205.met_dependencies = 
    [   MemoryDep(name='convolution_24', index=c0, size=(262144,)),
        MemoryDep(name='primals_74', index=c1, size=(64, 256, 16)),
        MemoryDep(name='relu_22', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_73', index=c1, size=(64, 256, 16)),
        MemoryDep(name='unsqueeze_550', index=c1, size=(64, 256, 16))]
buf205.group.device = cpu
buf205.group.iteration = ((64, 256, 16), ())
buf205.sizes = ([64, 256, 16], [])
class buf205_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 16}
    index0 = 4096*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_22', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf200', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_24', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_550', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf203', get_index_4)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_73', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_73', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf202', get_index_7)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_73', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_74', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf205', get_index_10, mul_6, None)
        return store


buf206: ExternKernelSchedulerNode(FallbackKernel)
buf206.writes = [StarDep(name='buf206')]
buf206.unmet_dependencies = [StarDep(name='buf205')]
buf206.met_dependencies = [StarDep(name='primals_73'), StarDep(name='relu_21')]
buf206.node.kernel = aten.convolution_backward


buf207: ExternKernelSchedulerNode(MultiOutput)
buf207.writes = [StarDep(name='buf207')]
buf207.unmet_dependencies = [StarDep(name='buf206')]
buf207.met_dependencies = []
buf207.node.kernel = None


buf208: ExternKernelSchedulerNode(MultiOutput)
buf208.writes = [StarDep(name='buf208')]
buf208.unmet_dependencies = [StarDep(name='buf206')]
buf208.met_dependencies = []
buf208.node.kernel = None


buf209_buf210: FusedSchedulerNode(NoneType)
buf209_buf210.writes = 
    [   MemoryDep(name='buf209', index=c0, size=(512, 1024)),
        MemoryDep(name='buf209', index=c0, size=(512,)),
        MemoryDep(name='buf210', index=c0, size=(512, 1024)),
        MemoryDep(name='buf210', index=c0, size=(512,))]
buf209_buf210.unmet_dependencies = 
    [   MemoryDep(name='buf187', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='buf207', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16))]
buf209_buf210.met_dependencies = 
    [   MemoryDep(name='convolution_23', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='relu_21', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='unsqueeze_562', index=c0, size=(512, 1024))]
buf209_buf210.snodes = ['buf209', 'buf210']


buf211: SchedulerNode(ComputedBuffer)
buf211.writes = [MemoryDep(name='buf211', index=c0, size=(524288,))]
buf211.unmet_dependencies = 
    [   MemoryDep(name='buf187', index=c0, size=(524288,)),
        MemoryDep(name='buf207', index=c0, size=(524288,)),
        MemoryDep(name='buf209', index=c1, size=(64, 512, 16)),
        MemoryDep(name='buf210', index=c1, size=(64, 512, 16))]
buf211.met_dependencies = 
    [   MemoryDep(name='convolution_23', index=c0, size=(524288,)),
        MemoryDep(name='primals_71', index=c1, size=(64, 512, 16)),
        MemoryDep(name='relu_21', index=c0, size=(524288,)),
        MemoryDep(name='squeeze_70', index=c1, size=(64, 512, 16)),
        MemoryDep(name='unsqueeze_562', index=c1, size=(64, 512, 16))]
buf211.group.device = cpu
buf211.group.iteration = ((64, 512, 16), ())
buf211.sizes = ([64, 512, 16], [])
class buf211_loop_body:
    var_ranges = {z0: 64, z1: 512, z2: 16}
    index0 = 8192*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_21', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf187', get_index_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf207', get_index_2)
        add = ops.add(load_1, load_2)
        where = ops.where(le, constant_1, add)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('convolution_23', get_index_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('unsqueeze_562', get_index_4)
        sub = ops.sub(load_3, load_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('buf210', get_index_5)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_5, constant_2)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_70', get_index_6)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_70', get_index_7)
        mul_1 = ops.mul(load_6, load_7)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('buf209', get_index_8)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_8, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('squeeze_70', get_index_9)
        get_index_10 = self.get_index('index1')
        load_10 = ops.load('primals_71', get_index_10)
        mul_5 = ops.mul(load_9, load_10)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_11 = self.get_index('index0')
        store = ops.store('buf211', get_index_11, mul_6, None)
        return store


buf212: SchedulerNode(ComputedBuffer)
buf212.writes = [MemoryDep(name='buf212', index=c0, size=(512,))]
buf212.unmet_dependencies = [MemoryDep(name='buf210', index=c0, size=(512,))]
buf212.met_dependencies = [MemoryDep(name='squeeze_70', index=c0, size=(512,))]
buf212.group.device = cpu
buf212.group.iteration = ((512,), ())
buf212.sizes = ([512], [])
class buf212_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf210', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_70', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf212', get_index_2, mul, None)
        return store


buf213: ExternKernelSchedulerNode(FallbackKernel)
buf213.writes = [StarDep(name='buf213')]
buf213.unmet_dependencies = [StarDep(name='buf211')]
buf213.met_dependencies = [StarDep(name='primals_70'), StarDep(name='relu_20')]
buf213.node.kernel = aten.convolution_backward


buf214: ExternKernelSchedulerNode(MultiOutput)
buf214.writes = [StarDep(name='buf214')]
buf214.unmet_dependencies = [StarDep(name='buf213')]
buf214.met_dependencies = []
buf214.node.kernel = None


buf215: ExternKernelSchedulerNode(MultiOutput)
buf215.writes = [StarDep(name='buf215')]
buf215.unmet_dependencies = [StarDep(name='buf213')]
buf215.met_dependencies = []
buf215.node.kernel = None


buf216_buf217: FusedSchedulerNode(NoneType)
buf216_buf217.writes = 
    [   MemoryDep(name='buf216', index=c0, size=(128, 1024)),
        MemoryDep(name='buf216', index=c0, size=(128,)),
        MemoryDep(name='buf217', index=c0, size=(128, 1024)),
        MemoryDep(name='buf217', index=c0, size=(128,))]
buf216_buf217.unmet_dependencies = [MemoryDep(name='buf214', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16))]
buf216_buf217.met_dependencies = 
    [   MemoryDep(name='convolution_22', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='relu_20', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='unsqueeze_574', index=c0, size=(128, 1024))]
buf216_buf217.snodes = ['buf216', 'buf217']


buf218: SchedulerNode(ComputedBuffer)
buf218.writes = [MemoryDep(name='buf218', index=c0, size=(128,))]
buf218.unmet_dependencies = [MemoryDep(name='buf217', index=c0, size=(128,))]
buf218.met_dependencies = [MemoryDep(name='squeeze_67', index=c0, size=(128,))]
buf218.group.device = cpu
buf218.group.iteration = ((128,), ())
buf218.sizes = ([128], [])
class buf218_loop_body:
    var_ranges = {z0: 128}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf217', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_67', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf218', get_index_2, mul, None)
        return store


buf219: SchedulerNode(ComputedBuffer)
buf219.writes = [MemoryDep(name='buf219', index=c0, size=(131072,))]
buf219.unmet_dependencies = 
    [   MemoryDep(name='buf214', index=c0, size=(131072,)),
        MemoryDep(name='buf216', index=c1, size=(64, 128, 16)),
        MemoryDep(name='buf217', index=c1, size=(64, 128, 16))]
buf219.met_dependencies = 
    [   MemoryDep(name='convolution_22', index=c0, size=(131072,)),
        MemoryDep(name='primals_68', index=c1, size=(64, 128, 16)),
        MemoryDep(name='relu_20', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_67', index=c1, size=(64, 128, 16)),
        MemoryDep(name='unsqueeze_574', index=c1, size=(64, 128, 16))]
buf219.group.device = cpu
buf219.group.iteration = ((64, 128, 16), ())
buf219.sizes = ([64, 128, 16], [])
class buf219_loop_body:
    var_ranges = {z0: 64, z1: 128, z2: 16}
    index0 = 2048*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_20', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf214', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_22', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_574', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf217', get_index_4)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_67', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_67', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf216', get_index_7)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_67', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_68', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf219', get_index_10, mul_6, None)
        return store


buf220: ExternKernelSchedulerNode(FallbackKernel)
buf220.writes = [StarDep(name='buf220')]
buf220.unmet_dependencies = [StarDep(name='buf219')]
buf220.met_dependencies = [StarDep(name='primals_67'), StarDep(name='relu_19')]
buf220.node.kernel = aten.convolution_backward


buf221: ExternKernelSchedulerNode(MultiOutput)
buf221.writes = [StarDep(name='buf221')]
buf221.unmet_dependencies = [StarDep(name='buf220')]
buf221.met_dependencies = []
buf221.node.kernel = None


buf222: ExternKernelSchedulerNode(MultiOutput)
buf222.writes = [StarDep(name='buf222')]
buf222.unmet_dependencies = [StarDep(name='buf220')]
buf222.met_dependencies = []
buf222.node.kernel = None


buf223_buf224: FusedSchedulerNode(NoneType)
buf223_buf224.writes = 
    [   MemoryDep(name='buf223', index=c0, size=(128, 1024)),
        MemoryDep(name='buf223', index=c0, size=(128,)),
        MemoryDep(name='buf224', index=c0, size=(128, 1024)),
        MemoryDep(name='buf224', index=c0, size=(128,))]
buf223_buf224.unmet_dependencies = [MemoryDep(name='buf221', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16))]
buf223_buf224.met_dependencies = 
    [   MemoryDep(name='convolution_21', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='relu_19', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='unsqueeze_586', index=c0, size=(128, 1024))]
buf223_buf224.snodes = ['buf223', 'buf224']


buf225: SchedulerNode(ComputedBuffer)
buf225.writes = [MemoryDep(name='buf225', index=c0, size=(128,))]
buf225.unmet_dependencies = [MemoryDep(name='buf224', index=c0, size=(128,))]
buf225.met_dependencies = [MemoryDep(name='squeeze_64', index=c0, size=(128,))]
buf225.group.device = cpu
buf225.group.iteration = ((128,), ())
buf225.sizes = ([128], [])
class buf225_loop_body:
    var_ranges = {z0: 128}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf224', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_64', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf225', get_index_2, mul, None)
        return store


buf226: SchedulerNode(ComputedBuffer)
buf226.writes = [MemoryDep(name='buf226', index=c0, size=(131072,))]
buf226.unmet_dependencies = 
    [   MemoryDep(name='buf221', index=c0, size=(131072,)),
        MemoryDep(name='buf223', index=c1, size=(64, 128, 16)),
        MemoryDep(name='buf224', index=c1, size=(64, 128, 16))]
buf226.met_dependencies = 
    [   MemoryDep(name='convolution_21', index=c0, size=(131072,)),
        MemoryDep(name='primals_65', index=c1, size=(64, 128, 16)),
        MemoryDep(name='relu_19', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_64', index=c1, size=(64, 128, 16)),
        MemoryDep(name='unsqueeze_586', index=c1, size=(64, 128, 16))]
buf226.group.device = cpu
buf226.group.iteration = ((64, 128, 16), ())
buf226.sizes = ([64, 128, 16], [])
class buf226_loop_body:
    var_ranges = {z0: 64, z1: 128, z2: 16}
    index0 = 2048*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_19', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf221', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_21', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_586', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf224', get_index_4)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_64', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_64', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf223', get_index_7)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_64', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_65', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf226', get_index_10, mul_6, None)
        return store


buf227: ExternKernelSchedulerNode(FallbackKernel)
buf227.writes = [StarDep(name='buf227')]
buf227.unmet_dependencies = [StarDep(name='buf226')]
buf227.met_dependencies = [StarDep(name='primals_64'), StarDep(name='relu_18')]
buf227.node.kernel = aten.convolution_backward


buf228: ExternKernelSchedulerNode(MultiOutput)
buf228.writes = [StarDep(name='buf228')]
buf228.unmet_dependencies = [StarDep(name='buf227')]
buf228.met_dependencies = []
buf228.node.kernel = None


buf229: ExternKernelSchedulerNode(MultiOutput)
buf229.writes = [StarDep(name='buf229')]
buf229.unmet_dependencies = [StarDep(name='buf227')]
buf229.met_dependencies = []
buf229.node.kernel = None


buf230: SchedulerNode(ComputedBuffer)
buf230.writes = [MemoryDep(name='buf230', index=c0, size=(524288,))]
buf230.unmet_dependencies = 
    [   MemoryDep(name='buf187', index=c0, size=(524288,)),
        MemoryDep(name='buf207', index=c0, size=(524288,)),
        MemoryDep(name='buf228', index=c0, size=(524288,))]
buf230.met_dependencies = 
    [   MemoryDep(name='relu_18', index=c0, size=(524288,)),
        MemoryDep(name='relu_21', index=c0, size=(524288,))]
buf230.group.device = cpu
buf230.group.iteration = ((524288,), ())
buf230.sizes = ([524288], [])
class buf230_loop_body:
    var_ranges = {z0: 524288}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_18', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('relu_21', get_index_1)
        constant_2 = ops.constant(0, torch.float32)
        le_1 = ops.le(load_1, constant_2)
        constant_3 = ops.constant(0.0, torch.float32)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf187', get_index_2)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('buf207', get_index_3)
        add = ops.add(load_2, load_3)
        where = ops.where(le_1, constant_3, add)
        get_index_4 = self.get_index('index0')
        load_4 = ops.load('buf228', get_index_4)
        add_1 = ops.add(where, load_4)
        where_1 = ops.where(le, constant_1, add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf230', get_index_5, where_1, None)
        return store


buf231_buf232: FusedSchedulerNode(NoneType)
buf231_buf232.writes = 
    [   MemoryDep(name='buf231', index=c0, size=(512, 1024)),
        MemoryDep(name='buf231', index=c0, size=(512,)),
        MemoryDep(name='buf232', index=c0, size=(512, 1024)),
        MemoryDep(name='buf232', index=c0, size=(512,))]
buf231_buf232.unmet_dependencies = [MemoryDep(name='buf230', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16))]
buf231_buf232.met_dependencies = 
    [   MemoryDep(name='convolution_20', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='unsqueeze_598', index=c0, size=(512, 1024))]
buf231_buf232.snodes = ['buf231', 'buf232']


buf233: SchedulerNode(ComputedBuffer)
buf233.writes = [MemoryDep(name='buf233', index=c0, size=(512,))]
buf233.unmet_dependencies = [MemoryDep(name='buf232', index=c0, size=(512,))]
buf233.met_dependencies = [MemoryDep(name='squeeze_61', index=c0, size=(512,))]
buf233.group.device = cpu
buf233.group.iteration = ((512,), ())
buf233.sizes = ([512], [])
class buf233_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf232', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_61', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf233', get_index_2, mul, None)
        return store


buf234: SchedulerNode(ComputedBuffer)
buf234.writes = [MemoryDep(name='buf234', index=c0, size=(524288,))]
buf234.unmet_dependencies = 
    [   MemoryDep(name='buf230', index=c0, size=(524288,)),
        MemoryDep(name='buf231', index=c1, size=(64, 512, 16)),
        MemoryDep(name='buf232', index=c1, size=(64, 512, 16))]
buf234.met_dependencies = 
    [   MemoryDep(name='convolution_20', index=c0, size=(524288,)),
        MemoryDep(name='primals_62', index=c1, size=(64, 512, 16)),
        MemoryDep(name='squeeze_61', index=c1, size=(64, 512, 16)),
        MemoryDep(name='unsqueeze_598', index=c1, size=(64, 512, 16))]
buf234.group.device = cpu
buf234.group.iteration = ((64, 512, 16), ())
buf234.sizes = ([64, 512, 16], [])
class buf234_loop_body:
    var_ranges = {z0: 64, z1: 512, z2: 16}
    index0 = 8192*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf230', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('convolution_20', get_index_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('unsqueeze_598', get_index_2)
        sub = ops.sub(load_1, load_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('buf232', get_index_3)
        constant = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_3, constant)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('squeeze_61', get_index_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_61', get_index_5)
        mul_1 = ops.mul(load_4, load_5)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(load, mul_3)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('buf231', get_index_6)
        constant_1 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_6, constant_1)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_61', get_index_7)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('primals_62', get_index_8)
        mul_5 = ops.mul(load_7, load_8)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_9 = self.get_index('index0')
        store = ops.store('buf234', get_index_9, mul_6, None)
        return store


buf235: ExternKernelSchedulerNode(FallbackKernel)
buf235.writes = [StarDep(name='buf235')]
buf235.unmet_dependencies = [StarDep(name='buf234')]
buf235.met_dependencies = [StarDep(name='primals_61'), StarDep(name='relu_17')]
buf235.node.kernel = aten.convolution_backward


buf236: ExternKernelSchedulerNode(MultiOutput)
buf236.writes = [StarDep(name='buf236')]
buf236.unmet_dependencies = [StarDep(name='buf235')]
buf236.met_dependencies = []
buf236.node.kernel = None


buf237: ExternKernelSchedulerNode(MultiOutput)
buf237.writes = [StarDep(name='buf237')]
buf237.unmet_dependencies = [StarDep(name='buf235')]
buf237.met_dependencies = []
buf237.node.kernel = None


buf238_buf239: FusedSchedulerNode(NoneType)
buf238_buf239.writes = 
    [   MemoryDep(name='buf238', index=c0, size=(128, 1024)),
        MemoryDep(name='buf238', index=c0, size=(128,)),
        MemoryDep(name='buf239', index=c0, size=(128, 1024)),
        MemoryDep(name='buf239', index=c0, size=(128,))]
buf238_buf239.unmet_dependencies = [MemoryDep(name='buf236', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16))]
buf238_buf239.met_dependencies = 
    [   MemoryDep(name='convolution_19', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='relu_17', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='unsqueeze_610', index=c0, size=(128, 1024))]
buf238_buf239.snodes = ['buf238', 'buf239']


buf240: SchedulerNode(ComputedBuffer)
buf240.writes = [MemoryDep(name='buf240', index=c0, size=(128,))]
buf240.unmet_dependencies = [MemoryDep(name='buf239', index=c0, size=(128,))]
buf240.met_dependencies = [MemoryDep(name='squeeze_58', index=c0, size=(128,))]
buf240.group.device = cpu
buf240.group.iteration = ((128,), ())
buf240.sizes = ([128], [])
class buf240_loop_body:
    var_ranges = {z0: 128}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf239', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_58', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf240', get_index_2, mul, None)
        return store


buf241: SchedulerNode(ComputedBuffer)
buf241.writes = [MemoryDep(name='buf241', index=c0, size=(131072,))]
buf241.unmet_dependencies = 
    [   MemoryDep(name='buf236', index=c0, size=(131072,)),
        MemoryDep(name='buf238', index=c1, size=(64, 128, 16)),
        MemoryDep(name='buf239', index=c1, size=(64, 128, 16))]
buf241.met_dependencies = 
    [   MemoryDep(name='convolution_19', index=c0, size=(131072,)),
        MemoryDep(name='primals_59', index=c1, size=(64, 128, 16)),
        MemoryDep(name='relu_17', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_58', index=c1, size=(64, 128, 16)),
        MemoryDep(name='unsqueeze_610', index=c1, size=(64, 128, 16))]
buf241.group.device = cpu
buf241.group.iteration = ((64, 128, 16), ())
buf241.sizes = ([64, 128, 16], [])
class buf241_loop_body:
    var_ranges = {z0: 64, z1: 128, z2: 16}
    index0 = 2048*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_17', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf236', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_19', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_610', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf239', get_index_4)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_58', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_58', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf238', get_index_7)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_58', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_59', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf241', get_index_10, mul_6, None)
        return store


buf242: ExternKernelSchedulerNode(FallbackKernel)
buf242.writes = [StarDep(name='buf242')]
buf242.unmet_dependencies = [StarDep(name='buf241')]
buf242.met_dependencies = [StarDep(name='primals_58'), StarDep(name='relu_16')]
buf242.node.kernel = aten.convolution_backward


buf243: ExternKernelSchedulerNode(MultiOutput)
buf243.writes = [StarDep(name='buf243')]
buf243.unmet_dependencies = [StarDep(name='buf242')]
buf243.met_dependencies = []
buf243.node.kernel = None


buf244: ExternKernelSchedulerNode(MultiOutput)
buf244.writes = [StarDep(name='buf244')]
buf244.unmet_dependencies = [StarDep(name='buf242')]
buf244.met_dependencies = []
buf244.node.kernel = None


buf245_buf246: FusedSchedulerNode(NoneType)
buf245_buf246.writes = 
    [   MemoryDep(name='buf245', index=c0, size=(128, 1024)),
        MemoryDep(name='buf245', index=c0, size=(128,)),
        MemoryDep(name='buf246', index=c0, size=(128, 1024)),
        MemoryDep(name='buf246', index=c0, size=(128,))]
buf245_buf246.unmet_dependencies = [MemoryDep(name='buf243', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16))]
buf245_buf246.met_dependencies = 
    [   MemoryDep(name='convolution_18', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='relu_16', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='unsqueeze_622', index=c0, size=(128, 1024))]
buf245_buf246.snodes = ['buf245', 'buf246']


buf247: SchedulerNode(ComputedBuffer)
buf247.writes = [MemoryDep(name='buf247', index=c0, size=(128,))]
buf247.unmet_dependencies = [MemoryDep(name='buf246', index=c0, size=(128,))]
buf247.met_dependencies = [MemoryDep(name='squeeze_55', index=c0, size=(128,))]
buf247.group.device = cpu
buf247.group.iteration = ((128,), ())
buf247.sizes = ([128], [])
class buf247_loop_body:
    var_ranges = {z0: 128}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf246', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_55', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf247', get_index_2, mul, None)
        return store


buf248: SchedulerNode(ComputedBuffer)
buf248.writes = [MemoryDep(name='buf248', index=c0, size=(131072,))]
buf248.unmet_dependencies = 
    [   MemoryDep(name='buf243', index=c0, size=(131072,)),
        MemoryDep(name='buf245', index=c1, size=(64, 128, 16)),
        MemoryDep(name='buf246', index=c1, size=(64, 128, 16))]
buf248.met_dependencies = 
    [   MemoryDep(name='convolution_18', index=c0, size=(131072,)),
        MemoryDep(name='primals_56', index=c1, size=(64, 128, 16)),
        MemoryDep(name='relu_16', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_55', index=c1, size=(64, 128, 16)),
        MemoryDep(name='unsqueeze_622', index=c1, size=(64, 128, 16))]
buf248.group.device = cpu
buf248.group.iteration = ((64, 128, 16), ())
buf248.sizes = ([64, 128, 16], [])
class buf248_loop_body:
    var_ranges = {z0: 64, z1: 128, z2: 16}
    index0 = 2048*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_16', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf243', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_18', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_622', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf246', get_index_4)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_55', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_55', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf245', get_index_7)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_55', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_56', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf248', get_index_10, mul_6, None)
        return store


buf249: ExternKernelSchedulerNode(FallbackKernel)
buf249.writes = [StarDep(name='buf249')]
buf249.unmet_dependencies = [StarDep(name='buf248')]
buf249.met_dependencies = [StarDep(name='primals_55'), StarDep(name='relu_15')]
buf249.node.kernel = aten.convolution_backward


buf250: ExternKernelSchedulerNode(MultiOutput)
buf250.writes = [StarDep(name='buf250')]
buf250.unmet_dependencies = [StarDep(name='buf249')]
buf250.met_dependencies = []
buf250.node.kernel = None


buf251: ExternKernelSchedulerNode(MultiOutput)
buf251.writes = [StarDep(name='buf251')]
buf251.unmet_dependencies = [StarDep(name='buf249')]
buf251.met_dependencies = []
buf251.node.kernel = None


buf252_buf253: FusedSchedulerNode(NoneType)
buf252_buf253.writes = 
    [   MemoryDep(name='buf252', index=c0, size=(512, 1024)),
        MemoryDep(name='buf252', index=c0, size=(512,)),
        MemoryDep(name='buf253', index=c0, size=(512, 1024)),
        MemoryDep(name='buf253', index=c0, size=(512,))]
buf252_buf253.unmet_dependencies = 
    [   MemoryDep(name='buf230', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='buf250', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16))]
buf252_buf253.met_dependencies = 
    [   MemoryDep(name='convolution_17', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='relu_15', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='unsqueeze_634', index=c0, size=(512, 1024))]
buf252_buf253.snodes = ['buf252', 'buf253']


buf254: SchedulerNode(ComputedBuffer)
buf254.writes = [MemoryDep(name='buf254', index=c0, size=(524288,))]
buf254.unmet_dependencies = 
    [   MemoryDep(name='buf230', index=c0, size=(524288,)),
        MemoryDep(name='buf250', index=c0, size=(524288,)),
        MemoryDep(name='buf252', index=c1, size=(64, 512, 16)),
        MemoryDep(name='buf253', index=c1, size=(64, 512, 16))]
buf254.met_dependencies = 
    [   MemoryDep(name='convolution_17', index=c0, size=(524288,)),
        MemoryDep(name='primals_53', index=c1, size=(64, 512, 16)),
        MemoryDep(name='relu_15', index=c0, size=(524288,)),
        MemoryDep(name='squeeze_52', index=c1, size=(64, 512, 16)),
        MemoryDep(name='unsqueeze_634', index=c1, size=(64, 512, 16))]
buf254.group.device = cpu
buf254.group.iteration = ((64, 512, 16), ())
buf254.sizes = ([64, 512, 16], [])
class buf254_loop_body:
    var_ranges = {z0: 64, z1: 512, z2: 16}
    index0 = 8192*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_15', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf230', get_index_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf250', get_index_2)
        add = ops.add(load_1, load_2)
        where = ops.where(le, constant_1, add)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('convolution_17', get_index_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('unsqueeze_634', get_index_4)
        sub = ops.sub(load_3, load_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('buf253', get_index_5)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_5, constant_2)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_52', get_index_6)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_52', get_index_7)
        mul_1 = ops.mul(load_6, load_7)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('buf252', get_index_8)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_8, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('squeeze_52', get_index_9)
        get_index_10 = self.get_index('index1')
        load_10 = ops.load('primals_53', get_index_10)
        mul_5 = ops.mul(load_9, load_10)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_11 = self.get_index('index0')
        store = ops.store('buf254', get_index_11, mul_6, None)
        return store


buf255: SchedulerNode(ComputedBuffer)
buf255.writes = [MemoryDep(name='buf255', index=c0, size=(512,))]
buf255.unmet_dependencies = [MemoryDep(name='buf253', index=c0, size=(512,))]
buf255.met_dependencies = [MemoryDep(name='squeeze_52', index=c0, size=(512,))]
buf255.group.device = cpu
buf255.group.iteration = ((512,), ())
buf255.sizes = ([512], [])
class buf255_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf253', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_52', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf255', get_index_2, mul, None)
        return store


buf256: ExternKernelSchedulerNode(FallbackKernel)
buf256.writes = [StarDep(name='buf256')]
buf256.unmet_dependencies = [StarDep(name='buf254')]
buf256.met_dependencies = [StarDep(name='primals_52'), StarDep(name='relu_14')]
buf256.node.kernel = aten.convolution_backward


buf257: ExternKernelSchedulerNode(MultiOutput)
buf257.writes = [StarDep(name='buf257')]
buf257.unmet_dependencies = [StarDep(name='buf256')]
buf257.met_dependencies = []
buf257.node.kernel = None


buf258: ExternKernelSchedulerNode(MultiOutput)
buf258.writes = [StarDep(name='buf258')]
buf258.unmet_dependencies = [StarDep(name='buf256')]
buf258.met_dependencies = []
buf258.node.kernel = None


buf259_buf260: FusedSchedulerNode(NoneType)
buf259_buf260.writes = 
    [   MemoryDep(name='buf259', index=c0, size=(128, 1024)),
        MemoryDep(name='buf259', index=c0, size=(128,)),
        MemoryDep(name='buf260', index=c0, size=(128, 1024)),
        MemoryDep(name='buf260', index=c0, size=(128,))]
buf259_buf260.unmet_dependencies = [MemoryDep(name='buf257', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16))]
buf259_buf260.met_dependencies = 
    [   MemoryDep(name='convolution_16', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='relu_14', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='unsqueeze_646', index=c0, size=(128, 1024))]
buf259_buf260.snodes = ['buf259', 'buf260']


buf261: SchedulerNode(ComputedBuffer)
buf261.writes = [MemoryDep(name='buf261', index=c0, size=(128,))]
buf261.unmet_dependencies = [MemoryDep(name='buf260', index=c0, size=(128,))]
buf261.met_dependencies = [MemoryDep(name='squeeze_49', index=c0, size=(128,))]
buf261.group.device = cpu
buf261.group.iteration = ((128,), ())
buf261.sizes = ([128], [])
class buf261_loop_body:
    var_ranges = {z0: 128}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf260', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_49', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf261', get_index_2, mul, None)
        return store


buf262: SchedulerNode(ComputedBuffer)
buf262.writes = [MemoryDep(name='buf262', index=c0, size=(131072,))]
buf262.unmet_dependencies = 
    [   MemoryDep(name='buf257', index=c0, size=(131072,)),
        MemoryDep(name='buf259', index=c1, size=(64, 128, 16)),
        MemoryDep(name='buf260', index=c1, size=(64, 128, 16))]
buf262.met_dependencies = 
    [   MemoryDep(name='convolution_16', index=c0, size=(131072,)),
        MemoryDep(name='primals_50', index=c1, size=(64, 128, 16)),
        MemoryDep(name='relu_14', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_49', index=c1, size=(64, 128, 16)),
        MemoryDep(name='unsqueeze_646', index=c1, size=(64, 128, 16))]
buf262.group.device = cpu
buf262.group.iteration = ((64, 128, 16), ())
buf262.sizes = ([64, 128, 16], [])
class buf262_loop_body:
    var_ranges = {z0: 64, z1: 128, z2: 16}
    index0 = 2048*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_14', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf257', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_16', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_646', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf260', get_index_4)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_49', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_49', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf259', get_index_7)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_49', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_50', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf262', get_index_10, mul_6, None)
        return store


buf263: ExternKernelSchedulerNode(FallbackKernel)
buf263.writes = [StarDep(name='buf263')]
buf263.unmet_dependencies = [StarDep(name='buf262')]
buf263.met_dependencies = [StarDep(name='primals_49'), StarDep(name='relu_13')]
buf263.node.kernel = aten.convolution_backward


buf264: ExternKernelSchedulerNode(MultiOutput)
buf264.writes = [StarDep(name='buf264')]
buf264.unmet_dependencies = [StarDep(name='buf263')]
buf264.met_dependencies = []
buf264.node.kernel = None


buf265: ExternKernelSchedulerNode(MultiOutput)
buf265.writes = [StarDep(name='buf265')]
buf265.unmet_dependencies = [StarDep(name='buf263')]
buf265.met_dependencies = []
buf265.node.kernel = None


buf266_buf267: FusedSchedulerNode(NoneType)
buf266_buf267.writes = 
    [   MemoryDep(name='buf266', index=c0, size=(128, 1024)),
        MemoryDep(name='buf266', index=c0, size=(128,)),
        MemoryDep(name='buf267', index=c0, size=(128, 1024)),
        MemoryDep(name='buf267', index=c0, size=(128,))]
buf266_buf267.unmet_dependencies = [MemoryDep(name='buf264', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16))]
buf266_buf267.met_dependencies = 
    [   MemoryDep(name='convolution_15', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='relu_13', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='unsqueeze_658', index=c0, size=(128, 1024))]
buf266_buf267.snodes = ['buf266', 'buf267']


buf268: SchedulerNode(ComputedBuffer)
buf268.writes = [MemoryDep(name='buf268', index=c0, size=(128,))]
buf268.unmet_dependencies = [MemoryDep(name='buf267', index=c0, size=(128,))]
buf268.met_dependencies = [MemoryDep(name='squeeze_46', index=c0, size=(128,))]
buf268.group.device = cpu
buf268.group.iteration = ((128,), ())
buf268.sizes = ([128], [])
class buf268_loop_body:
    var_ranges = {z0: 128}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf267', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_46', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf268', get_index_2, mul, None)
        return store


buf269: SchedulerNode(ComputedBuffer)
buf269.writes = [MemoryDep(name='buf269', index=c0, size=(131072,))]
buf269.unmet_dependencies = 
    [   MemoryDep(name='buf264', index=c0, size=(131072,)),
        MemoryDep(name='buf266', index=c1, size=(64, 128, 16)),
        MemoryDep(name='buf267', index=c1, size=(64, 128, 16))]
buf269.met_dependencies = 
    [   MemoryDep(name='convolution_15', index=c0, size=(131072,)),
        MemoryDep(name='primals_47', index=c1, size=(64, 128, 16)),
        MemoryDep(name='relu_13', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_46', index=c1, size=(64, 128, 16)),
        MemoryDep(name='unsqueeze_658', index=c1, size=(64, 128, 16))]
buf269.group.device = cpu
buf269.group.iteration = ((64, 128, 16), ())
buf269.sizes = ([64, 128, 16], [])
class buf269_loop_body:
    var_ranges = {z0: 64, z1: 128, z2: 16}
    index0 = 2048*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_13', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf264', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_15', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_658', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf267', get_index_4)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_46', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_46', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf266', get_index_7)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_46', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_47', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf269', get_index_10, mul_6, None)
        return store


buf270: ExternKernelSchedulerNode(FallbackKernel)
buf270.writes = [StarDep(name='buf270')]
buf270.unmet_dependencies = [StarDep(name='buf269')]
buf270.met_dependencies = [StarDep(name='primals_46'), StarDep(name='relu_12')]
buf270.node.kernel = aten.convolution_backward


buf271: ExternKernelSchedulerNode(MultiOutput)
buf271.writes = [StarDep(name='buf271')]
buf271.unmet_dependencies = [StarDep(name='buf270')]
buf271.met_dependencies = []
buf271.node.kernel = None


buf272: ExternKernelSchedulerNode(MultiOutput)
buf272.writes = [StarDep(name='buf272')]
buf272.unmet_dependencies = [StarDep(name='buf270')]
buf272.met_dependencies = []
buf272.node.kernel = None


buf273: SchedulerNode(ComputedBuffer)
buf273.writes = [MemoryDep(name='buf273', index=c0, size=(524288,))]
buf273.unmet_dependencies = 
    [   MemoryDep(name='buf230', index=c0, size=(524288,)),
        MemoryDep(name='buf250', index=c0, size=(524288,)),
        MemoryDep(name='buf271', index=c0, size=(524288,))]
buf273.met_dependencies = 
    [   MemoryDep(name='relu_12', index=c0, size=(524288,)),
        MemoryDep(name='relu_15', index=c0, size=(524288,))]
buf273.group.device = cpu
buf273.group.iteration = ((524288,), ())
buf273.sizes = ([524288], [])
class buf273_loop_body:
    var_ranges = {z0: 524288}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_12', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('relu_15', get_index_1)
        constant_2 = ops.constant(0, torch.float32)
        le_1 = ops.le(load_1, constant_2)
        constant_3 = ops.constant(0.0, torch.float32)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf230', get_index_2)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('buf250', get_index_3)
        add = ops.add(load_2, load_3)
        where = ops.where(le_1, constant_3, add)
        get_index_4 = self.get_index('index0')
        load_4 = ops.load('buf271', get_index_4)
        add_1 = ops.add(where, load_4)
        where_1 = ops.where(le, constant_1, add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf273', get_index_5, where_1, None)
        return store


buf274_buf275_buf281: FusedSchedulerNode(NoneType)
buf274_buf275_buf281.writes = 
    [   MemoryDep(name='buf274', index=c0, size=(512, 1024)),
        MemoryDep(name='buf274', index=c0, size=(512,)),
        MemoryDep(name='buf275', index=c0, size=(512, 1024)),
        MemoryDep(name='buf275', index=c0, size=(512,)),
        MemoryDep(name='buf281', index=c0, size=(512, 1024)),
        MemoryDep(name='buf281', index=c0, size=(512,))]
buf274_buf275_buf281.unmet_dependencies = [MemoryDep(name='buf273', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16))]
buf274_buf275_buf281.met_dependencies = 
    [   MemoryDep(name='convolution_13', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='convolution_14', index=16*c0 + 8192*c1 + c2, size=(512, 64, 16)),
        MemoryDep(name='unsqueeze_670', index=c0, size=(512, 1024)),
        MemoryDep(name='unsqueeze_682', index=c0, size=(512, 1024))]
buf274_buf275_buf281.snodes = ['buf274', 'buf275', 'buf281']


buf276: SchedulerNode(ComputedBuffer)
buf276.writes = [MemoryDep(name='buf276', index=c0, size=(512,))]
buf276.unmet_dependencies = [MemoryDep(name='buf275', index=c0, size=(512,))]
buf276.met_dependencies = [MemoryDep(name='squeeze_43', index=c0, size=(512,))]
buf276.group.device = cpu
buf276.group.iteration = ((512,), ())
buf276.sizes = ([512], [])
class buf276_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf275', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_43', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf276', get_index_2, mul, None)
        return store


buf277_buf283: FusedSchedulerNode(NoneType)
buf277_buf283.writes = 
    [   MemoryDep(name='buf277', index=c0, size=(524288,)),
        MemoryDep(name='buf283', index=c0, size=(524288,))]
buf277_buf283.unmet_dependencies = 
    [   MemoryDep(name='buf273', index=c0, size=(524288,)),
        MemoryDep(name='buf274', index=c1, size=(64, 512, 16)),
        MemoryDep(name='buf275', index=c1, size=(64, 512, 16)),
        MemoryDep(name='buf281', index=c1, size=(64, 512, 16))]
buf277_buf283.met_dependencies = 
    [   MemoryDep(name='convolution_13', index=c0, size=(524288,)),
        MemoryDep(name='convolution_14', index=c0, size=(524288,)),
        MemoryDep(name='primals_41', index=c1, size=(64, 512, 16)),
        MemoryDep(name='primals_44', index=c1, size=(64, 512, 16)),
        MemoryDep(name='squeeze_40', index=c1, size=(64, 512, 16)),
        MemoryDep(name='squeeze_43', index=c1, size=(64, 512, 16)),
        MemoryDep(name='unsqueeze_670', index=c1, size=(64, 512, 16)),
        MemoryDep(name='unsqueeze_682', index=c1, size=(64, 512, 16))]
buf277_buf283.snodes = ['buf277', 'buf283']


buf278: ExternKernelSchedulerNode(FallbackKernel)
buf278.writes = [StarDep(name='buf278')]
buf278.unmet_dependencies = [StarDep(name='buf277')]
buf278.met_dependencies = [StarDep(name='primals_43'), StarDep(name='relu_9')]
buf278.node.kernel = aten.convolution_backward


buf279: ExternKernelSchedulerNode(MultiOutput)
buf279.writes = [StarDep(name='buf279')]
buf279.unmet_dependencies = [StarDep(name='buf278')]
buf279.met_dependencies = []
buf279.node.kernel = None


buf280: ExternKernelSchedulerNode(MultiOutput)
buf280.writes = [StarDep(name='buf280')]
buf280.unmet_dependencies = [StarDep(name='buf278')]
buf280.met_dependencies = []
buf280.node.kernel = None


buf282: SchedulerNode(ComputedBuffer)
buf282.writes = [MemoryDep(name='buf282', index=c0, size=(512,))]
buf282.unmet_dependencies = [MemoryDep(name='buf281', index=c0, size=(512,))]
buf282.met_dependencies = [MemoryDep(name='squeeze_40', index=c0, size=(512,))]
buf282.group.device = cpu
buf282.group.iteration = ((512,), ())
buf282.sizes = ([512], [])
class buf282_loop_body:
    var_ranges = {z0: 512}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf281', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_40', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf282', get_index_2, mul, None)
        return store


buf284: ExternKernelSchedulerNode(FallbackKernel)
buf284.writes = [StarDep(name='buf284')]
buf284.unmet_dependencies = [StarDep(name='buf283')]
buf284.met_dependencies = [StarDep(name='primals_40'), StarDep(name='relu_11')]
buf284.node.kernel = aten.convolution_backward


buf285: ExternKernelSchedulerNode(MultiOutput)
buf285.writes = [StarDep(name='buf285')]
buf285.unmet_dependencies = [StarDep(name='buf284')]
buf285.met_dependencies = []
buf285.node.kernel = None


buf286: ExternKernelSchedulerNode(MultiOutput)
buf286.writes = [StarDep(name='buf286')]
buf286.unmet_dependencies = [StarDep(name='buf284')]
buf286.met_dependencies = []
buf286.node.kernel = None


buf287_buf288: FusedSchedulerNode(NoneType)
buf287_buf288.writes = 
    [   MemoryDep(name='buf287', index=c0, size=(128, 1024)),
        MemoryDep(name='buf287', index=c0, size=(128,)),
        MemoryDep(name='buf288', index=c0, size=(128, 1024)),
        MemoryDep(name='buf288', index=c0, size=(128,))]
buf287_buf288.unmet_dependencies = [MemoryDep(name='buf285', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16))]
buf287_buf288.met_dependencies = 
    [   MemoryDep(name='convolution_12', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='relu_11', index=16*c0 + 2048*c1 + c2, size=(128, 64, 16)),
        MemoryDep(name='unsqueeze_694', index=c0, size=(128, 1024))]
buf287_buf288.snodes = ['buf287', 'buf288']


buf289: SchedulerNode(ComputedBuffer)
buf289.writes = [MemoryDep(name='buf289', index=c0, size=(128,))]
buf289.unmet_dependencies = [MemoryDep(name='buf288', index=c0, size=(128,))]
buf289.met_dependencies = [MemoryDep(name='squeeze_37', index=c0, size=(128,))]
buf289.group.device = cpu
buf289.group.iteration = ((128,), ())
buf289.sizes = ([128], [])
class buf289_loop_body:
    var_ranges = {z0: 128}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf288', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_37', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf289', get_index_2, mul, None)
        return store


buf290: SchedulerNode(ComputedBuffer)
buf290.writes = [MemoryDep(name='buf290', index=c0, size=(131072,))]
buf290.unmet_dependencies = 
    [   MemoryDep(name='buf285', index=c0, size=(131072,)),
        MemoryDep(name='buf287', index=c1, size=(64, 128, 16)),
        MemoryDep(name='buf288', index=c1, size=(64, 128, 16))]
buf290.met_dependencies = 
    [   MemoryDep(name='convolution_12', index=c0, size=(131072,)),
        MemoryDep(name='primals_38', index=c1, size=(64, 128, 16)),
        MemoryDep(name='relu_11', index=c0, size=(131072,)),
        MemoryDep(name='squeeze_37', index=c1, size=(64, 128, 16)),
        MemoryDep(name='unsqueeze_694', index=c1, size=(64, 128, 16))]
buf290.group.device = cpu
buf290.group.iteration = ((64, 128, 16), ())
buf290.sizes = ([64, 128, 16], [])
class buf290_loop_body:
    var_ranges = {z0: 64, z1: 128, z2: 16}
    index0 = 2048*z0 + 16*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_11', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf285', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_12', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_694', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf288', get_index_4)
        constant_2 = ops.constant(0.0009765625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_37', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_37', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf287', get_index_7)
        constant_3 = ops.constant(0.0009765625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_37', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_38', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf290', get_index_10, mul_6, None)
        return store


buf291: ExternKernelSchedulerNode(FallbackKernel)
buf291.writes = [StarDep(name='buf291')]
buf291.unmet_dependencies = [StarDep(name='buf290')]
buf291.met_dependencies = [StarDep(name='primals_37'), StarDep(name='relu_10')]
buf291.node.kernel = aten.convolution_backward


buf292: ExternKernelSchedulerNode(MultiOutput)
buf292.writes = [StarDep(name='buf292')]
buf292.unmet_dependencies = [StarDep(name='buf291')]
buf292.met_dependencies = []
buf292.node.kernel = None


buf293: ExternKernelSchedulerNode(MultiOutput)
buf293.writes = [StarDep(name='buf293')]
buf293.unmet_dependencies = [StarDep(name='buf291')]
buf293.met_dependencies = []
buf293.node.kernel = None


buf294_buf295: FusedSchedulerNode(NoneType)
buf294_buf295.writes = 
    [   MemoryDep(name='buf294', index=c0, size=(128, 4096)),
        MemoryDep(name='buf294', index=c0, size=(128,)),
        MemoryDep(name='buf295', index=c0, size=(128, 4096)),
        MemoryDep(name='buf295', index=c0, size=(128,))]
buf294_buf295.unmet_dependencies = [MemoryDep(name='buf292', index=64*c0 + 8192*c1 + c2, size=(128, 64, 64))]
buf294_buf295.met_dependencies = 
    [   MemoryDep(name='convolution_11', index=64*c0 + 8192*c1 + c2, size=(128, 64, 64)),
        MemoryDep(name='relu_10', index=64*c0 + 8192*c1 + c2, size=(128, 64, 64)),
        MemoryDep(name='unsqueeze_706', index=c0, size=(128, 4096))]
buf294_buf295.snodes = ['buf294', 'buf295']


buf296: SchedulerNode(ComputedBuffer)
buf296.writes = [MemoryDep(name='buf296', index=c0, size=(128,))]
buf296.unmet_dependencies = [MemoryDep(name='buf295', index=c0, size=(128,))]
buf296.met_dependencies = [MemoryDep(name='squeeze_34', index=c0, size=(128,))]
buf296.group.device = cpu
buf296.group.iteration = ((128,), ())
buf296.sizes = ([128], [])
class buf296_loop_body:
    var_ranges = {z0: 128}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf295', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_34', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf296', get_index_2, mul, None)
        return store


buf297: SchedulerNode(ComputedBuffer)
buf297.writes = [MemoryDep(name='buf297', index=c0, size=(524288,))]
buf297.unmet_dependencies = 
    [   MemoryDep(name='buf292', index=c0, size=(524288,)),
        MemoryDep(name='buf294', index=c1, size=(64, 128, 64)),
        MemoryDep(name='buf295', index=c1, size=(64, 128, 64))]
buf297.met_dependencies = 
    [   MemoryDep(name='convolution_11', index=c0, size=(524288,)),
        MemoryDep(name='primals_35', index=c1, size=(64, 128, 64)),
        MemoryDep(name='relu_10', index=c0, size=(524288,)),
        MemoryDep(name='squeeze_34', index=c1, size=(64, 128, 64)),
        MemoryDep(name='unsqueeze_706', index=c1, size=(64, 128, 64))]
buf297.group.device = cpu
buf297.group.iteration = ((64, 128, 64), ())
buf297.sizes = ([64, 128, 64], [])
class buf297_loop_body:
    var_ranges = {z0: 64, z1: 128, z2: 64}
    index0 = 8192*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_10', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf292', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_11', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_706', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf295', get_index_4)
        constant_2 = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_34', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_34', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf294', get_index_7)
        constant_3 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_34', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_35', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf297', get_index_10, mul_6, None)
        return store


buf298: ExternKernelSchedulerNode(FallbackKernel)
buf298.writes = [StarDep(name='buf298')]
buf298.unmet_dependencies = [StarDep(name='buf297')]
buf298.met_dependencies = [StarDep(name='primals_34'), StarDep(name='relu_9')]
buf298.node.kernel = aten.convolution_backward


buf299: ExternKernelSchedulerNode(MultiOutput)
buf299.writes = [StarDep(name='buf299')]
buf299.unmet_dependencies = [StarDep(name='buf298')]
buf299.met_dependencies = []
buf299.node.kernel = None


buf300: ExternKernelSchedulerNode(MultiOutput)
buf300.writes = [StarDep(name='buf300')]
buf300.unmet_dependencies = [StarDep(name='buf298')]
buf300.met_dependencies = []
buf300.node.kernel = None


buf301_buf302: FusedSchedulerNode(NoneType)
buf301_buf302.writes = 
    [   MemoryDep(name='buf301', index=c0, size=(256, 4096)),
        MemoryDep(name='buf301', index=c0, size=(256,)),
        MemoryDep(name='buf302', index=c0, size=(256, 4096)),
        MemoryDep(name='buf302', index=c0, size=(256,))]
buf301_buf302.unmet_dependencies = 
    [   MemoryDep(name='buf279', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64)),
        MemoryDep(name='buf299', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64))]
buf301_buf302.met_dependencies = 
    [   MemoryDep(name='convolution_10', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64)),
        MemoryDep(name='relu_9', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64)),
        MemoryDep(name='unsqueeze_718', index=c0, size=(256, 4096))]
buf301_buf302.snodes = ['buf301', 'buf302']


buf303: SchedulerNode(ComputedBuffer)
buf303.writes = [MemoryDep(name='buf303', index=c0, size=(1048576,))]
buf303.unmet_dependencies = 
    [   MemoryDep(name='buf279', index=c0, size=(1048576,)),
        MemoryDep(name='buf299', index=c0, size=(1048576,)),
        MemoryDep(name='buf301', index=c1, size=(64, 256, 64)),
        MemoryDep(name='buf302', index=c1, size=(64, 256, 64))]
buf303.met_dependencies = 
    [   MemoryDep(name='convolution_10', index=c0, size=(1048576,)),
        MemoryDep(name='primals_32', index=c1, size=(64, 256, 64)),
        MemoryDep(name='relu_9', index=c0, size=(1048576,)),
        MemoryDep(name='squeeze_31', index=c1, size=(64, 256, 64)),
        MemoryDep(name='unsqueeze_718', index=c1, size=(64, 256, 64))]
buf303.group.device = cpu
buf303.group.iteration = ((64, 256, 64), ())
buf303.sizes = ([64, 256, 64], [])
class buf303_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 64}
    index0 = 16384*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_9', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf279', get_index_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf299', get_index_2)
        add = ops.add(load_1, load_2)
        where = ops.where(le, constant_1, add)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('convolution_10', get_index_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('unsqueeze_718', get_index_4)
        sub = ops.sub(load_3, load_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('buf302', get_index_5)
        constant_2 = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_5, constant_2)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_31', get_index_6)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_31', get_index_7)
        mul_1 = ops.mul(load_6, load_7)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('buf301', get_index_8)
        constant_3 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_8, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('squeeze_31', get_index_9)
        get_index_10 = self.get_index('index1')
        load_10 = ops.load('primals_32', get_index_10)
        mul_5 = ops.mul(load_9, load_10)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_11 = self.get_index('index0')
        store = ops.store('buf303', get_index_11, mul_6, None)
        return store


buf304: SchedulerNode(ComputedBuffer)
buf304.writes = [MemoryDep(name='buf304', index=c0, size=(256,))]
buf304.unmet_dependencies = [MemoryDep(name='buf302', index=c0, size=(256,))]
buf304.met_dependencies = [MemoryDep(name='squeeze_31', index=c0, size=(256,))]
buf304.group.device = cpu
buf304.group.iteration = ((256,), ())
buf304.sizes = ([256], [])
class buf304_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf302', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_31', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf304', get_index_2, mul, None)
        return store


buf305: ExternKernelSchedulerNode(FallbackKernel)
buf305.writes = [StarDep(name='buf305')]
buf305.unmet_dependencies = [StarDep(name='buf303')]
buf305.met_dependencies = [StarDep(name='primals_31'), StarDep(name='relu_8')]
buf305.node.kernel = aten.convolution_backward


buf306: ExternKernelSchedulerNode(MultiOutput)
buf306.writes = [StarDep(name='buf306')]
buf306.unmet_dependencies = [StarDep(name='buf305')]
buf306.met_dependencies = []
buf306.node.kernel = None


buf307: ExternKernelSchedulerNode(MultiOutput)
buf307.writes = [StarDep(name='buf307')]
buf307.unmet_dependencies = [StarDep(name='buf305')]
buf307.met_dependencies = []
buf307.node.kernel = None


buf308_buf309: FusedSchedulerNode(NoneType)
buf308_buf309.writes = 
    [   MemoryDep(name='buf308', index=c0, size=(64, 4096)),
        MemoryDep(name='buf308', index=c0, size=(64,)),
        MemoryDep(name='buf309', index=c0, size=(64, 4096)),
        MemoryDep(name='buf309', index=c0, size=(64,))]
buf308_buf309.unmet_dependencies = [MemoryDep(name='buf306', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64))]
buf308_buf309.met_dependencies = 
    [   MemoryDep(name='convolution_9', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='relu_8', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_730', index=c0, size=(64, 4096))]
buf308_buf309.snodes = ['buf308', 'buf309']


buf310: SchedulerNode(ComputedBuffer)
buf310.writes = [MemoryDep(name='buf310', index=c0, size=(64,))]
buf310.unmet_dependencies = [MemoryDep(name='buf309', index=c0, size=(64,))]
buf310.met_dependencies = [MemoryDep(name='squeeze_28', index=c0, size=(64,))]
buf310.group.device = cpu
buf310.group.iteration = ((64,), ())
buf310.sizes = ([64], [])
class buf310_loop_body:
    var_ranges = {z0: 64}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf309', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_28', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf310', get_index_2, mul, None)
        return store


buf311: SchedulerNode(ComputedBuffer)
buf311.writes = [MemoryDep(name='buf311', index=c0, size=(262144,))]
buf311.unmet_dependencies = 
    [   MemoryDep(name='buf306', index=c0, size=(262144,)),
        MemoryDep(name='buf308', index=c1, size=(64, 64, 64)),
        MemoryDep(name='buf309', index=c1, size=(64, 64, 64))]
buf311.met_dependencies = 
    [   MemoryDep(name='convolution_9', index=c0, size=(262144,)),
        MemoryDep(name='primals_29', index=c1, size=(64, 64, 64)),
        MemoryDep(name='relu_8', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_28', index=c1, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_730', index=c1, size=(64, 64, 64))]
buf311.group.device = cpu
buf311.group.iteration = ((64, 64, 64), ())
buf311.sizes = ([64, 64, 64], [])
class buf311_loop_body:
    var_ranges = {z0: 64, z1: 64, z2: 64}
    index0 = 4096*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_8', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf306', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_9', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_730', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf309', get_index_4)
        constant_2 = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_28', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_28', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf308', get_index_7)
        constant_3 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_28', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_29', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf311', get_index_10, mul_6, None)
        return store


buf312: ExternKernelSchedulerNode(FallbackKernel)
buf312.writes = [StarDep(name='buf312')]
buf312.unmet_dependencies = [StarDep(name='buf311')]
buf312.met_dependencies = [StarDep(name='primals_28'), StarDep(name='relu_7')]
buf312.node.kernel = aten.convolution_backward


buf313: ExternKernelSchedulerNode(MultiOutput)
buf313.writes = [StarDep(name='buf313')]
buf313.unmet_dependencies = [StarDep(name='buf312')]
buf313.met_dependencies = []
buf313.node.kernel = None


buf314: ExternKernelSchedulerNode(MultiOutput)
buf314.writes = [StarDep(name='buf314')]
buf314.unmet_dependencies = [StarDep(name='buf312')]
buf314.met_dependencies = []
buf314.node.kernel = None


buf315_buf316: FusedSchedulerNode(NoneType)
buf315_buf316.writes = 
    [   MemoryDep(name='buf315', index=c0, size=(64, 4096)),
        MemoryDep(name='buf315', index=c0, size=(64,)),
        MemoryDep(name='buf316', index=c0, size=(64, 4096)),
        MemoryDep(name='buf316', index=c0, size=(64,))]
buf315_buf316.unmet_dependencies = [MemoryDep(name='buf313', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64))]
buf315_buf316.met_dependencies = 
    [   MemoryDep(name='convolution_8', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='relu_7', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_742', index=c0, size=(64, 4096))]
buf315_buf316.snodes = ['buf315', 'buf316']


buf317: SchedulerNode(ComputedBuffer)
buf317.writes = [MemoryDep(name='buf317', index=c0, size=(64,))]
buf317.unmet_dependencies = [MemoryDep(name='buf316', index=c0, size=(64,))]
buf317.met_dependencies = [MemoryDep(name='squeeze_25', index=c0, size=(64,))]
buf317.group.device = cpu
buf317.group.iteration = ((64,), ())
buf317.sizes = ([64], [])
class buf317_loop_body:
    var_ranges = {z0: 64}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf316', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_25', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf317', get_index_2, mul, None)
        return store


buf318: SchedulerNode(ComputedBuffer)
buf318.writes = [MemoryDep(name='buf318', index=c0, size=(262144,))]
buf318.unmet_dependencies = 
    [   MemoryDep(name='buf313', index=c0, size=(262144,)),
        MemoryDep(name='buf315', index=c1, size=(64, 64, 64)),
        MemoryDep(name='buf316', index=c1, size=(64, 64, 64))]
buf318.met_dependencies = 
    [   MemoryDep(name='convolution_8', index=c0, size=(262144,)),
        MemoryDep(name='primals_26', index=c1, size=(64, 64, 64)),
        MemoryDep(name='relu_7', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_25', index=c1, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_742', index=c1, size=(64, 64, 64))]
buf318.group.device = cpu
buf318.group.iteration = ((64, 64, 64), ())
buf318.sizes = ([64, 64, 64], [])
class buf318_loop_body:
    var_ranges = {z0: 64, z1: 64, z2: 64}
    index0 = 4096*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_7', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf313', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_8', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_742', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf316', get_index_4)
        constant_2 = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_25', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_25', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf315', get_index_7)
        constant_3 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_25', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_26', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf318', get_index_10, mul_6, None)
        return store


buf319: ExternKernelSchedulerNode(FallbackKernel)
buf319.writes = [StarDep(name='buf319')]
buf319.unmet_dependencies = [StarDep(name='buf318')]
buf319.met_dependencies = [StarDep(name='primals_25'), StarDep(name='relu_6')]
buf319.node.kernel = aten.convolution_backward


buf320: ExternKernelSchedulerNode(MultiOutput)
buf320.writes = [StarDep(name='buf320')]
buf320.unmet_dependencies = [StarDep(name='buf319')]
buf320.met_dependencies = []
buf320.node.kernel = None


buf321: ExternKernelSchedulerNode(MultiOutput)
buf321.writes = [StarDep(name='buf321')]
buf321.unmet_dependencies = [StarDep(name='buf319')]
buf321.met_dependencies = []
buf321.node.kernel = None


buf322: SchedulerNode(ComputedBuffer)
buf322.writes = [MemoryDep(name='buf322', index=c0, size=(1048576,))]
buf322.unmet_dependencies = 
    [   MemoryDep(name='buf279', index=c0, size=(1048576,)),
        MemoryDep(name='buf299', index=c0, size=(1048576,)),
        MemoryDep(name='buf320', index=c0, size=(1048576,))]
buf322.met_dependencies = 
    [   MemoryDep(name='relu_6', index=c0, size=(1048576,)),
        MemoryDep(name='relu_9', index=c0, size=(1048576,))]
buf322.group.device = cpu
buf322.group.iteration = ((1048576,), ())
buf322.sizes = ([1048576], [])
class buf322_loop_body:
    var_ranges = {z0: 1048576}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_6', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('relu_9', get_index_1)
        constant_2 = ops.constant(0, torch.float32)
        le_1 = ops.le(load_1, constant_2)
        constant_3 = ops.constant(0.0, torch.float32)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('buf279', get_index_2)
        get_index_3 = self.get_index('index0')
        load_3 = ops.load('buf299', get_index_3)
        add = ops.add(load_2, load_3)
        where = ops.where(le_1, constant_3, add)
        get_index_4 = self.get_index('index0')
        load_4 = ops.load('buf320', get_index_4)
        add_1 = ops.add(where, load_4)
        where_1 = ops.where(le, constant_1, add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf322', get_index_5, where_1, None)
        return store


buf323_buf324: FusedSchedulerNode(NoneType)
buf323_buf324.writes = 
    [   MemoryDep(name='buf323', index=c0, size=(256, 4096)),
        MemoryDep(name='buf323', index=c0, size=(256,)),
        MemoryDep(name='buf324', index=c0, size=(256, 4096)),
        MemoryDep(name='buf324', index=c0, size=(256,))]
buf323_buf324.unmet_dependencies = [MemoryDep(name='buf322', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64))]
buf323_buf324.met_dependencies = 
    [   MemoryDep(name='convolution_7', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64)),
        MemoryDep(name='unsqueeze_754', index=c0, size=(256, 4096))]
buf323_buf324.snodes = ['buf323', 'buf324']


buf325: SchedulerNode(ComputedBuffer)
buf325.writes = [MemoryDep(name='buf325', index=c0, size=(256,))]
buf325.unmet_dependencies = [MemoryDep(name='buf324', index=c0, size=(256,))]
buf325.met_dependencies = [MemoryDep(name='squeeze_22', index=c0, size=(256,))]
buf325.group.device = cpu
buf325.group.iteration = ((256,), ())
buf325.sizes = ([256], [])
class buf325_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf324', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_22', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf325', get_index_2, mul, None)
        return store


buf326: SchedulerNode(ComputedBuffer)
buf326.writes = [MemoryDep(name='buf326', index=c0, size=(1048576,))]
buf326.unmet_dependencies = 
    [   MemoryDep(name='buf322', index=c0, size=(1048576,)),
        MemoryDep(name='buf323', index=c1, size=(64, 256, 64)),
        MemoryDep(name='buf324', index=c1, size=(64, 256, 64))]
buf326.met_dependencies = 
    [   MemoryDep(name='convolution_7', index=c0, size=(1048576,)),
        MemoryDep(name='primals_23', index=c1, size=(64, 256, 64)),
        MemoryDep(name='squeeze_22', index=c1, size=(64, 256, 64)),
        MemoryDep(name='unsqueeze_754', index=c1, size=(64, 256, 64))]
buf326.group.device = cpu
buf326.group.iteration = ((64, 256, 64), ())
buf326.sizes = ([64, 256, 64], [])
class buf326_loop_body:
    var_ranges = {z0: 64, z1: 256, z2: 64}
    index0 = 16384*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf322', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('convolution_7', get_index_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('unsqueeze_754', get_index_2)
        sub = ops.sub(load_1, load_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('buf324', get_index_3)
        constant = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_3, constant)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('squeeze_22', get_index_4)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_22', get_index_5)
        mul_1 = ops.mul(load_4, load_5)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(load, mul_3)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('buf323', get_index_6)
        constant_1 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_6, constant_1)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('squeeze_22', get_index_7)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('primals_23', get_index_8)
        mul_5 = ops.mul(load_7, load_8)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_9 = self.get_index('index0')
        store = ops.store('buf326', get_index_9, mul_6, None)
        return store


buf327: ExternKernelSchedulerNode(FallbackKernel)
buf327.writes = [StarDep(name='buf327')]
buf327.unmet_dependencies = [StarDep(name='buf326')]
buf327.met_dependencies = [StarDep(name='primals_22'), StarDep(name='relu_5')]
buf327.node.kernel = aten.convolution_backward


buf328: ExternKernelSchedulerNode(MultiOutput)
buf328.writes = [StarDep(name='buf328')]
buf328.unmet_dependencies = [StarDep(name='buf327')]
buf328.met_dependencies = []
buf328.node.kernel = None


buf329: ExternKernelSchedulerNode(MultiOutput)
buf329.writes = [StarDep(name='buf329')]
buf329.unmet_dependencies = [StarDep(name='buf327')]
buf329.met_dependencies = []
buf329.node.kernel = None


buf330_buf331: FusedSchedulerNode(NoneType)
buf330_buf331.writes = 
    [   MemoryDep(name='buf330', index=c0, size=(64, 4096)),
        MemoryDep(name='buf330', index=c0, size=(64,)),
        MemoryDep(name='buf331', index=c0, size=(64, 4096)),
        MemoryDep(name='buf331', index=c0, size=(64,))]
buf330_buf331.unmet_dependencies = [MemoryDep(name='buf328', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64))]
buf330_buf331.met_dependencies = 
    [   MemoryDep(name='convolution_6', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='relu_5', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_766', index=c0, size=(64, 4096))]
buf330_buf331.snodes = ['buf330', 'buf331']


buf332: SchedulerNode(ComputedBuffer)
buf332.writes = [MemoryDep(name='buf332', index=c0, size=(64,))]
buf332.unmet_dependencies = [MemoryDep(name='buf331', index=c0, size=(64,))]
buf332.met_dependencies = [MemoryDep(name='squeeze_19', index=c0, size=(64,))]
buf332.group.device = cpu
buf332.group.iteration = ((64,), ())
buf332.sizes = ([64], [])
class buf332_loop_body:
    var_ranges = {z0: 64}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf331', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_19', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf332', get_index_2, mul, None)
        return store


buf333: SchedulerNode(ComputedBuffer)
buf333.writes = [MemoryDep(name='buf333', index=c0, size=(262144,))]
buf333.unmet_dependencies = 
    [   MemoryDep(name='buf328', index=c0, size=(262144,)),
        MemoryDep(name='buf330', index=c1, size=(64, 64, 64)),
        MemoryDep(name='buf331', index=c1, size=(64, 64, 64))]
buf333.met_dependencies = 
    [   MemoryDep(name='convolution_6', index=c0, size=(262144,)),
        MemoryDep(name='primals_20', index=c1, size=(64, 64, 64)),
        MemoryDep(name='relu_5', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_19', index=c1, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_766', index=c1, size=(64, 64, 64))]
buf333.group.device = cpu
buf333.group.iteration = ((64, 64, 64), ())
buf333.sizes = ([64, 64, 64], [])
class buf333_loop_body:
    var_ranges = {z0: 64, z1: 64, z2: 64}
    index0 = 4096*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_5', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf328', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_6', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_766', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf331', get_index_4)
        constant_2 = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_19', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_19', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf330', get_index_7)
        constant_3 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_19', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_20', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf333', get_index_10, mul_6, None)
        return store


buf334: ExternKernelSchedulerNode(FallbackKernel)
buf334.writes = [StarDep(name='buf334')]
buf334.unmet_dependencies = [StarDep(name='buf333')]
buf334.met_dependencies = [StarDep(name='primals_19'), StarDep(name='relu_4')]
buf334.node.kernel = aten.convolution_backward


buf335: ExternKernelSchedulerNode(MultiOutput)
buf335.writes = [StarDep(name='buf335')]
buf335.unmet_dependencies = [StarDep(name='buf334')]
buf335.met_dependencies = []
buf335.node.kernel = None


buf336: ExternKernelSchedulerNode(MultiOutput)
buf336.writes = [StarDep(name='buf336')]
buf336.unmet_dependencies = [StarDep(name='buf334')]
buf336.met_dependencies = []
buf336.node.kernel = None


buf337_buf338: FusedSchedulerNode(NoneType)
buf337_buf338.writes = 
    [   MemoryDep(name='buf337', index=c0, size=(64, 4096)),
        MemoryDep(name='buf337', index=c0, size=(64,)),
        MemoryDep(name='buf338', index=c0, size=(64, 4096)),
        MemoryDep(name='buf338', index=c0, size=(64,))]
buf337_buf338.unmet_dependencies = [MemoryDep(name='buf335', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64))]
buf337_buf338.met_dependencies = 
    [   MemoryDep(name='convolution_5', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='relu_4', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_778', index=c0, size=(64, 4096))]
buf337_buf338.snodes = ['buf337', 'buf338']


buf339: SchedulerNode(ComputedBuffer)
buf339.writes = [MemoryDep(name='buf339', index=c0, size=(64,))]
buf339.unmet_dependencies = [MemoryDep(name='buf338', index=c0, size=(64,))]
buf339.met_dependencies = [MemoryDep(name='squeeze_16', index=c0, size=(64,))]
buf339.group.device = cpu
buf339.group.iteration = ((64,), ())
buf339.sizes = ([64], [])
class buf339_loop_body:
    var_ranges = {z0: 64}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf338', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_16', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf339', get_index_2, mul, None)
        return store


buf340: SchedulerNode(ComputedBuffer)
buf340.writes = [MemoryDep(name='buf340', index=c0, size=(262144,))]
buf340.unmet_dependencies = 
    [   MemoryDep(name='buf335', index=c0, size=(262144,)),
        MemoryDep(name='buf337', index=c1, size=(64, 64, 64)),
        MemoryDep(name='buf338', index=c1, size=(64, 64, 64))]
buf340.met_dependencies = 
    [   MemoryDep(name='convolution_5', index=c0, size=(262144,)),
        MemoryDep(name='primals_17', index=c1, size=(64, 64, 64)),
        MemoryDep(name='relu_4', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_16', index=c1, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_778', index=c1, size=(64, 64, 64))]
buf340.group.device = cpu
buf340.group.iteration = ((64, 64, 64), ())
buf340.sizes = ([64, 64, 64], [])
class buf340_loop_body:
    var_ranges = {z0: 64, z1: 64, z2: 64}
    index0 = 4096*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_4', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf335', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_5', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_778', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf338', get_index_4)
        constant_2 = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_16', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_16', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf337', get_index_7)
        constant_3 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_16', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_17', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf340', get_index_10, mul_6, None)
        return store


buf341: ExternKernelSchedulerNode(FallbackKernel)
buf341.writes = [StarDep(name='buf341')]
buf341.unmet_dependencies = [StarDep(name='buf340')]
buf341.met_dependencies = [StarDep(name='primals_16'), StarDep(name='relu_3')]
buf341.node.kernel = aten.convolution_backward


buf342: ExternKernelSchedulerNode(MultiOutput)
buf342.writes = [StarDep(name='buf342')]
buf342.unmet_dependencies = [StarDep(name='buf341')]
buf342.met_dependencies = []
buf342.node.kernel = None


buf343: ExternKernelSchedulerNode(MultiOutput)
buf343.writes = [StarDep(name='buf343')]
buf343.unmet_dependencies = [StarDep(name='buf341')]
buf343.met_dependencies = []
buf343.node.kernel = None


buf344_buf345_buf351: FusedSchedulerNode(NoneType)
buf344_buf345_buf351.writes = 
    [   MemoryDep(name='buf344', index=c0, size=(256, 4096)),
        MemoryDep(name='buf344', index=c0, size=(256,)),
        MemoryDep(name='buf345', index=c0, size=(256, 4096)),
        MemoryDep(name='buf345', index=c0, size=(256,)),
        MemoryDep(name='buf351', index=c0, size=(256, 4096)),
        MemoryDep(name='buf351', index=c0, size=(256,))]
buf344_buf345_buf351.unmet_dependencies = 
    [   MemoryDep(name='buf322', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64)),
        MemoryDep(name='buf342', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64))]
buf344_buf345_buf351.met_dependencies = 
    [   MemoryDep(name='convolution_3', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64)),
        MemoryDep(name='convolution_4', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64)),
        MemoryDep(name='relu_3', index=64*c0 + 16384*c1 + c2, size=(256, 64, 64)),
        MemoryDep(name='unsqueeze_790', index=c0, size=(256, 4096)),
        MemoryDep(name='unsqueeze_802', index=c0, size=(256, 4096))]
buf344_buf345_buf351.snodes = ['buf344', 'buf345', 'buf351']


buf346_buf352: FusedSchedulerNode(NoneType)
buf346_buf352.writes = 
    [   MemoryDep(name='buf346', index=c0, size=(1048576,)),
        MemoryDep(name='buf352', index=c0, size=(1048576,))]
buf346_buf352.unmet_dependencies = 
    [   MemoryDep(name='buf322', index=c0, size=(1048576,)),
        MemoryDep(name='buf342', index=c0, size=(1048576,)),
        MemoryDep(name='buf344', index=c1, size=(64, 256, 64)),
        MemoryDep(name='buf345', index=c1, size=(64, 256, 64)),
        MemoryDep(name='buf351', index=c1, size=(64, 256, 64))]
buf346_buf352.met_dependencies = 
    [   MemoryDep(name='convolution_3', index=c0, size=(1048576,)),
        MemoryDep(name='convolution_4', index=c0, size=(1048576,)),
        MemoryDep(name='primals_11', index=c1, size=(64, 256, 64)),
        MemoryDep(name='primals_14', index=c1, size=(64, 256, 64)),
        MemoryDep(name='relu_3', index=c0, size=(1048576,)),
        MemoryDep(name='squeeze_10', index=c1, size=(64, 256, 64)),
        MemoryDep(name='squeeze_13', index=c1, size=(64, 256, 64)),
        MemoryDep(name='unsqueeze_790', index=c1, size=(64, 256, 64)),
        MemoryDep(name='unsqueeze_802', index=c1, size=(64, 256, 64))]
buf346_buf352.snodes = ['buf346', 'buf352']


buf347: SchedulerNode(ComputedBuffer)
buf347.writes = [MemoryDep(name='buf347', index=c0, size=(256,))]
buf347.unmet_dependencies = [MemoryDep(name='buf345', index=c0, size=(256,))]
buf347.met_dependencies = [MemoryDep(name='squeeze_13', index=c0, size=(256,))]
buf347.group.device = cpu
buf347.group.iteration = ((256,), ())
buf347.sizes = ([256], [])
class buf347_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf345', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_13', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf347', get_index_2, mul, None)
        return store


buf348: ExternKernelSchedulerNode(FallbackKernel)
buf348.writes = [StarDep(name='buf348')]
buf348.unmet_dependencies = [StarDep(name='buf346')]
buf348.met_dependencies = [StarDep(name='getitem_2'), StarDep(name='primals_13')]
buf348.node.kernel = aten.convolution_backward


buf349: ExternKernelSchedulerNode(MultiOutput)
buf349.writes = [StarDep(name='buf349')]
buf349.unmet_dependencies = [StarDep(name='buf348')]
buf349.met_dependencies = []
buf349.node.kernel = None


buf350: ExternKernelSchedulerNode(MultiOutput)
buf350.writes = [StarDep(name='buf350')]
buf350.unmet_dependencies = [StarDep(name='buf348')]
buf350.met_dependencies = []
buf350.node.kernel = None


buf353: SchedulerNode(ComputedBuffer)
buf353.writes = [MemoryDep(name='buf353', index=c0, size=(256,))]
buf353.unmet_dependencies = [MemoryDep(name='buf351', index=c0, size=(256,))]
buf353.met_dependencies = [MemoryDep(name='squeeze_10', index=c0, size=(256,))]
buf353.group.device = cpu
buf353.group.iteration = ((256,), ())
buf353.sizes = ([256], [])
class buf353_loop_body:
    var_ranges = {z0: 256}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf351', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_10', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf353', get_index_2, mul, None)
        return store


buf354: ExternKernelSchedulerNode(FallbackKernel)
buf354.writes = [StarDep(name='buf354')]
buf354.unmet_dependencies = [StarDep(name='buf352')]
buf354.met_dependencies = [StarDep(name='primals_10'), StarDep(name='relu_2')]
buf354.node.kernel = aten.convolution_backward


buf355: ExternKernelSchedulerNode(MultiOutput)
buf355.writes = [StarDep(name='buf355')]
buf355.unmet_dependencies = [StarDep(name='buf354')]
buf355.met_dependencies = []
buf355.node.kernel = None


buf356: ExternKernelSchedulerNode(MultiOutput)
buf356.writes = [StarDep(name='buf356')]
buf356.unmet_dependencies = [StarDep(name='buf354')]
buf356.met_dependencies = []
buf356.node.kernel = None


buf357_buf358: FusedSchedulerNode(NoneType)
buf357_buf358.writes = 
    [   MemoryDep(name='buf357', index=c0, size=(64, 4096)),
        MemoryDep(name='buf357', index=c0, size=(64,)),
        MemoryDep(name='buf358', index=c0, size=(64, 4096)),
        MemoryDep(name='buf358', index=c0, size=(64,))]
buf357_buf358.unmet_dependencies = [MemoryDep(name='buf355', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64))]
buf357_buf358.met_dependencies = 
    [   MemoryDep(name='convolution_2', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='relu_2', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_814', index=c0, size=(64, 4096))]
buf357_buf358.snodes = ['buf357', 'buf358']


buf359: SchedulerNode(ComputedBuffer)
buf359.writes = [MemoryDep(name='buf359', index=c0, size=(64,))]
buf359.unmet_dependencies = [MemoryDep(name='buf358', index=c0, size=(64,))]
buf359.met_dependencies = [MemoryDep(name='squeeze_7', index=c0, size=(64,))]
buf359.group.device = cpu
buf359.group.iteration = ((64,), ())
buf359.sizes = ([64], [])
class buf359_loop_body:
    var_ranges = {z0: 64}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf358', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_7', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf359', get_index_2, mul, None)
        return store


buf360: SchedulerNode(ComputedBuffer)
buf360.writes = [MemoryDep(name='buf360', index=c0, size=(262144,))]
buf360.unmet_dependencies = 
    [   MemoryDep(name='buf355', index=c0, size=(262144,)),
        MemoryDep(name='buf357', index=c1, size=(64, 64, 64)),
        MemoryDep(name='buf358', index=c1, size=(64, 64, 64))]
buf360.met_dependencies = 
    [   MemoryDep(name='convolution_2', index=c0, size=(262144,)),
        MemoryDep(name='primals_8', index=c1, size=(64, 64, 64)),
        MemoryDep(name='relu_2', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_7', index=c1, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_814', index=c1, size=(64, 64, 64))]
buf360.group.device = cpu
buf360.group.iteration = ((64, 64, 64), ())
buf360.sizes = ([64, 64, 64], [])
class buf360_loop_body:
    var_ranges = {z0: 64, z1: 64, z2: 64}
    index0 = 4096*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_2', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf355', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_2', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_814', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf358', get_index_4)
        constant_2 = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_7', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_7', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf357', get_index_7)
        constant_3 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_7', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_8', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf360', get_index_10, mul_6, None)
        return store


buf361: ExternKernelSchedulerNode(FallbackKernel)
buf361.writes = [StarDep(name='buf361')]
buf361.unmet_dependencies = [StarDep(name='buf360')]
buf361.met_dependencies = [StarDep(name='primals_7'), StarDep(name='relu_1')]
buf361.node.kernel = aten.convolution_backward


buf362: ExternKernelSchedulerNode(MultiOutput)
buf362.writes = [StarDep(name='buf362')]
buf362.unmet_dependencies = [StarDep(name='buf361')]
buf362.met_dependencies = []
buf362.node.kernel = None


buf363: ExternKernelSchedulerNode(MultiOutput)
buf363.writes = [StarDep(name='buf363')]
buf363.unmet_dependencies = [StarDep(name='buf361')]
buf363.met_dependencies = []
buf363.node.kernel = None


buf364_buf365: FusedSchedulerNode(NoneType)
buf364_buf365.writes = 
    [   MemoryDep(name='buf364', index=c0, size=(64, 4096)),
        MemoryDep(name='buf364', index=c0, size=(64,)),
        MemoryDep(name='buf365', index=c0, size=(64, 4096)),
        MemoryDep(name='buf365', index=c0, size=(64,))]
buf364_buf365.unmet_dependencies = [MemoryDep(name='buf362', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64))]
buf364_buf365.met_dependencies = 
    [   MemoryDep(name='convolution_1', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='relu_1', index=64*c0 + 4096*c1 + c2, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_826', index=c0, size=(64, 4096))]
buf364_buf365.snodes = ['buf364', 'buf365']


buf366: SchedulerNode(ComputedBuffer)
buf366.writes = [MemoryDep(name='buf366', index=c0, size=(64,))]
buf366.unmet_dependencies = [MemoryDep(name='buf365', index=c0, size=(64,))]
buf366.met_dependencies = [MemoryDep(name='squeeze_4', index=c0, size=(64,))]
buf366.group.device = cpu
buf366.group.iteration = ((64,), ())
buf366.sizes = ([64], [])
class buf366_loop_body:
    var_ranges = {z0: 64}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf365', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_4', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf366', get_index_2, mul, None)
        return store


buf367: SchedulerNode(ComputedBuffer)
buf367.writes = [MemoryDep(name='buf367', index=c0, size=(262144,))]
buf367.unmet_dependencies = 
    [   MemoryDep(name='buf362', index=c0, size=(262144,)),
        MemoryDep(name='buf364', index=c1, size=(64, 64, 64)),
        MemoryDep(name='buf365', index=c1, size=(64, 64, 64))]
buf367.met_dependencies = 
    [   MemoryDep(name='convolution_1', index=c0, size=(262144,)),
        MemoryDep(name='primals_5', index=c1, size=(64, 64, 64)),
        MemoryDep(name='relu_1', index=c0, size=(262144,)),
        MemoryDep(name='squeeze_4', index=c1, size=(64, 64, 64)),
        MemoryDep(name='unsqueeze_826', index=c1, size=(64, 64, 64))]
buf367.group.device = cpu
buf367.group.iteration = ((64, 64, 64), ())
buf367.sizes = ([64, 64, 64], [])
class buf367_loop_body:
    var_ranges = {z0: 64, z1: 64, z2: 64}
    index0 = 4096*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu_1', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf362', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution_1', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_826', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf365', get_index_4)
        constant_2 = ops.constant(0.000244140625, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_4', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_4', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf364', get_index_7)
        constant_3 = ops.constant(0.000244140625, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_4', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_5', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf367', get_index_10, mul_6, None)
        return store


buf368: ExternKernelSchedulerNode(FallbackKernel)
buf368.writes = [StarDep(name='buf368')]
buf368.unmet_dependencies = [StarDep(name='buf367')]
buf368.met_dependencies = [StarDep(name='getitem_2'), StarDep(name='primals_4')]
buf368.node.kernel = aten.convolution_backward


buf369: ExternKernelSchedulerNode(MultiOutput)
buf369.writes = [StarDep(name='buf369')]
buf369.unmet_dependencies = [StarDep(name='buf368')]
buf369.met_dependencies = []
buf369.node.kernel = None


buf370: ExternKernelSchedulerNode(MultiOutput)
buf370.writes = [StarDep(name='buf370')]
buf370.unmet_dependencies = [StarDep(name='buf368')]
buf370.met_dependencies = []
buf370.node.kernel = None


buf371: SchedulerNode(ComputedBuffer)
buf371.writes = [MemoryDep(name='buf371', index=c0, size=(262144,))]
buf371.unmet_dependencies = 
    [   MemoryDep(name='buf349', index=c0, size=(262144,)),
        MemoryDep(name='buf369', index=c0, size=(262144,))]
buf371.met_dependencies = []
buf371.group.device = cpu
buf371.group.iteration = ((262144,), ())
buf371.sizes = ([262144], [])
class buf371_loop_body:
    var_ranges = {z0: 262144}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf349', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf369', get_index_1)
        add = ops.add(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf371', get_index_2, add, None)
        return store


buf372: SchedulerNode(ComputedBuffer)
buf372.writes = [MemoryDep(name='buf372', index=c0, size=(1048576,))]
buf372.unmet_dependencies = 
    [   MemoryDep(name='buf371', index=8*(tmp19) + (tmp22) + 64*c0, size=(4096, 256)),
        MemoryDep(name='buf371', index=8*(tmp34) + (tmp37) + 64*c0, size=(4096, 256)),
        MemoryDep(name='buf371', index=8*(tmp53) + (tmp56) + 64*c0, size=(4096, 256)),
        MemoryDep(name='buf371', index=8*(tmp72) + (tmp75) + 64*c0, size=(4096, 256))]
buf372.met_dependencies = 
    [   MemoryDep(name='getitem_3', index=8*(tmp19) + (tmp22) + 64*c0, size=(4096, 256)),
        MemoryDep(name='getitem_3', index=8*(tmp34) + (tmp37) + 64*c0, size=(4096, 256)),
        MemoryDep(name='getitem_3', index=8*(tmp53) + (tmp56) + 64*c0, size=(4096, 256)),
        MemoryDep(name='getitem_3', index=8*(tmp72) + (tmp75) + 64*c0, size=(4096, 256))]
buf372.group.device = cpu
buf372.group.iteration = ((4096, 16, 16), ())
buf372.sizes = ([4096, 16, 16], [])
class buf372_loop_body:
    var_ranges = {z0: 4096, z1: 16, z2: 16}
    index0 = 16*z1 + z2
    index1 = z1//2
    index2 = z2//2
    index3 = (z1 + 1)//2 + 1
    index4 = (z2 + 1)//2 + 1
    index5 = 8*indirect0 + indirect1 + 64*z0
    index6 = 8*indirect2 + indirect3 + 64*z0
    index7 = 8*indirect4 + indirect5 + 64*z0
    index8 = 8*indirect6 + indirect7 + 64*z0
    index9 = 256*z0 + 16*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        index_expr = ops.index_expr(get_index, torch.int32)
        get_index_1 = self.get_index('index1')
        index_expr_1 = ops.index_expr(get_index_1, torch.int32)
        get_index_2 = self.get_index('index2')
        index_expr_2 = ops.index_expr(get_index_2, torch.int32)
        get_index_3 = self.get_index('index3')
        index_expr_3 = ops.index_expr(get_index_3, torch.int32)
        get_index_4 = self.get_index('index4')
        index_expr_4 = ops.index_expr(get_index_4, torch.int32)
        constant = ops.constant(0, torch.int32)
        maximum = ops.maximum(index_expr_1, constant)
        constant_1 = ops.constant(0, torch.int32)
        maximum_1 = ops.maximum(index_expr_2, constant_1)
        constant_2 = ops.constant(8, torch.int32)
        minimum = ops.minimum(index_expr_3, constant_2)
        constant_3 = ops.constant(8, torch.int32)
        minimum_1 = ops.minimum(index_expr_4, constant_3)
        constant_4 = ops.constant(0, torch.int32)
        add = ops.add(maximum, constant_4)
        constant_5 = ops.constant(0, torch.int32)
        add_1 = ops.add(maximum_1, constant_5)
        constant_6 = ops.constant(1, torch.int32)
        sub = ops.sub(minimum, constant_6)
        minimum_2 = ops.minimum(add, sub)
        set_indirect0 = self.set_indirect0(minimum_2)
        constant_7 = ops.constant(1, torch.int32)
        sub_1 = ops.sub(minimum_1, constant_7)
        minimum_3 = ops.minimum(add_1, sub_1)
        set_indirect1 = self.set_indirect1(minimum_3)
        get_index_5 = self.get_index('index5')
        load = ops.load('getitem_3', get_index_5)
        get_index_6 = self.get_index('index5')
        load_1 = ops.load('buf371', get_index_6)
        eq = ops.eq(load, index_expr)
        constant_8 = ops.constant(0.0, torch.float32)
        where = ops.where(eq, load_1, constant_8)
        constant_9 = ops.constant(0, torch.int32)
        add_2 = ops.add(maximum, constant_9)
        constant_10 = ops.constant(1, torch.int32)
        add_3 = ops.add(maximum_1, constant_10)
        constant_11 = ops.constant(1, torch.int32)
        sub_2 = ops.sub(minimum, constant_11)
        minimum_4 = ops.minimum(add_2, sub_2)
        set_indirect2 = self.set_indirect2(minimum_4)
        constant_12 = ops.constant(1, torch.int32)
        sub_3 = ops.sub(minimum_1, constant_12)
        minimum_5 = ops.minimum(add_3, sub_3)
        set_indirect3 = self.set_indirect3(minimum_5)
        get_index_7 = self.get_index('index6')
        load_2 = ops.load('getitem_3', get_index_7)
        get_index_8 = self.get_index('index6')
        load_3 = ops.load('buf371', get_index_8)
        eq_1 = ops.eq(load_2, index_expr)
        lt = ops.lt(add_2, minimum)
        lt_1 = ops.lt(add_3, minimum_1)
        and_ = ops.and_(lt, lt_1)
        and__1 = ops.and_(and_, eq_1)
        add_4 = ops.add(where, load_3)
        where_1 = ops.where(and__1, add_4, where)
        constant_13 = ops.constant(1, torch.int32)
        add_5 = ops.add(maximum, constant_13)
        constant_14 = ops.constant(0, torch.int32)
        add_6 = ops.add(maximum_1, constant_14)
        constant_15 = ops.constant(1, torch.int32)
        sub_4 = ops.sub(minimum, constant_15)
        minimum_6 = ops.minimum(add_5, sub_4)
        set_indirect4 = self.set_indirect4(minimum_6)
        constant_16 = ops.constant(1, torch.int32)
        sub_5 = ops.sub(minimum_1, constant_16)
        minimum_7 = ops.minimum(add_6, sub_5)
        set_indirect5 = self.set_indirect5(minimum_7)
        get_index_9 = self.get_index('index7')
        load_4 = ops.load('getitem_3', get_index_9)
        get_index_10 = self.get_index('index7')
        load_5 = ops.load('buf371', get_index_10)
        eq_2 = ops.eq(load_4, index_expr)
        lt_2 = ops.lt(add_5, minimum)
        lt_3 = ops.lt(add_6, minimum_1)
        and__2 = ops.and_(lt_2, lt_3)
        and__3 = ops.and_(and__2, eq_2)
        add_7 = ops.add(where_1, load_5)
        where_2 = ops.where(and__3, add_7, where_1)
        constant_17 = ops.constant(1, torch.int32)
        add_8 = ops.add(maximum, constant_17)
        constant_18 = ops.constant(1, torch.int32)
        add_9 = ops.add(maximum_1, constant_18)
        constant_19 = ops.constant(1, torch.int32)
        sub_6 = ops.sub(minimum, constant_19)
        minimum_8 = ops.minimum(add_8, sub_6)
        set_indirect6 = self.set_indirect6(minimum_8)
        constant_20 = ops.constant(1, torch.int32)
        sub_7 = ops.sub(minimum_1, constant_20)
        minimum_9 = ops.minimum(add_9, sub_7)
        set_indirect7 = self.set_indirect7(minimum_9)
        get_index_11 = self.get_index('index8')
        load_6 = ops.load('getitem_3', get_index_11)
        get_index_12 = self.get_index('index8')
        load_7 = ops.load('buf371', get_index_12)
        eq_3 = ops.eq(load_6, index_expr)
        lt_4 = ops.lt(add_8, minimum)
        lt_5 = ops.lt(add_9, minimum_1)
        and__4 = ops.and_(lt_4, lt_5)
        and__5 = ops.and_(and__4, eq_3)
        add_10 = ops.add(where_2, load_7)
        where_3 = ops.where(and__5, add_10, where_2)
        get_index_13 = self.get_index('index9')
        store = ops.store('buf372', get_index_13, where_3, None)
        return store


buf373_buf374: FusedSchedulerNode(NoneType)
buf373_buf374.writes = 
    [   MemoryDep(name='buf373', index=c0, size=(64, 16384)),
        MemoryDep(name='buf373', index=c0, size=(64,)),
        MemoryDep(name='buf374', index=c0, size=(64, 16384)),
        MemoryDep(name='buf374', index=c0, size=(64,))]
buf373_buf374.unmet_dependencies = [MemoryDep(name='buf372', index=256*c0 + 16384*c1 + c2, size=(64, 64, 256))]
buf373_buf374.met_dependencies = 
    [   MemoryDep(name='convolution', index=256*c0 + 16384*c1 + c2, size=(64, 64, 256)),
        MemoryDep(name='relu', index=256*c0 + 16384*c1 + c2, size=(64, 64, 256)),
        MemoryDep(name='unsqueeze_838', index=c0, size=(64, 16384))]
buf373_buf374.snodes = ['buf373', 'buf374']


buf375: SchedulerNode(ComputedBuffer)
buf375.writes = [MemoryDep(name='buf375', index=c0, size=(64,))]
buf375.unmet_dependencies = [MemoryDep(name='buf374', index=c0, size=(64,))]
buf375.met_dependencies = [MemoryDep(name='squeeze_1', index=c0, size=(64,))]
buf375.group.device = cpu
buf375.group.iteration = ((64,), ())
buf375.sizes = ([64], [])
class buf375_loop_body:
    var_ranges = {z0: 64}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf374', get_index)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('squeeze_1', get_index_1)
        mul = ops.mul(load, load_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf375', get_index_2, mul, None)
        return store


buf376: SchedulerNode(ComputedBuffer)
buf376.writes = [MemoryDep(name='buf376', index=c0, size=(1048576,))]
buf376.unmet_dependencies = 
    [   MemoryDep(name='buf372', index=c0, size=(1048576,)),
        MemoryDep(name='buf373', index=c1, size=(64, 64, 256)),
        MemoryDep(name='buf374', index=c1, size=(64, 64, 256))]
buf376.met_dependencies = 
    [   MemoryDep(name='convolution', index=c0, size=(1048576,)),
        MemoryDep(name='primals_2', index=c1, size=(64, 64, 256)),
        MemoryDep(name='relu', index=c0, size=(1048576,)),
        MemoryDep(name='squeeze_1', index=c1, size=(64, 64, 256)),
        MemoryDep(name='unsqueeze_838', index=c1, size=(64, 64, 256))]
buf376.group.device = cpu
buf376.group.iteration = ((64, 64, 256), ())
buf376.sizes = ([64, 64, 256], [])
class buf376_loop_body:
    var_ranges = {z0: 64, z1: 64, z2: 256}
    index0 = 16384*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('relu', get_index)
        constant = ops.constant(0, torch.float32)
        le = ops.le(load, constant)
        constant_1 = ops.constant(0.0, torch.float32)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf372', get_index_1)
        where = ops.where(le, constant_1, load_1)
        get_index_2 = self.get_index('index0')
        load_2 = ops.load('convolution', get_index_2)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('unsqueeze_838', get_index_3)
        sub = ops.sub(load_2, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('buf374', get_index_4)
        constant_2 = ops.constant(6.103515625e-05, torch.float32)
        mul = ops.mul(load_4, constant_2)
        get_index_5 = self.get_index('index1')
        load_5 = ops.load('squeeze_1', get_index_5)
        get_index_6 = self.get_index('index1')
        load_6 = ops.load('squeeze_1', get_index_6)
        mul_1 = ops.mul(load_5, load_6)
        mul_2 = ops.mul(mul, mul_1)
        mul_3 = ops.mul(sub, mul_2)
        sub_1 = ops.sub(where, mul_3)
        get_index_7 = self.get_index('index1')
        load_7 = ops.load('buf373', get_index_7)
        constant_3 = ops.constant(6.103515625e-05, torch.float32)
        mul_4 = ops.mul(load_7, constant_3)
        sub_2 = ops.sub(sub_1, mul_4)
        get_index_8 = self.get_index('index1')
        load_8 = ops.load('squeeze_1', get_index_8)
        get_index_9 = self.get_index('index1')
        load_9 = ops.load('primals_2', get_index_9)
        mul_5 = ops.mul(load_8, load_9)
        mul_6 = ops.mul(sub_2, mul_5)
        get_index_10 = self.get_index('index0')
        store = ops.store('buf376', get_index_10, mul_6, None)
        return store


buf377: ExternKernelSchedulerNode(FallbackKernel)
buf377.writes = [StarDep(name='buf377')]
buf377.unmet_dependencies = [StarDep(name='buf376')]
buf377.met_dependencies = [StarDep(name='primals_1'), StarDep(name='primals_321')]
buf377.node.kernel = aten.convolution_backward


buf378: ExternKernelSchedulerNode(MultiOutput)
buf378.writes = [StarDep(name='buf378')]
buf378.unmet_dependencies = [StarDep(name='buf377')]
buf378.met_dependencies = []
buf378.node.kernel = None


